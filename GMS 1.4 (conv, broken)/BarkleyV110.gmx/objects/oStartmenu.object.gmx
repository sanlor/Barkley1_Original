<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sDialogBlip</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room=RomDeath0) {
instance_destroy();
exit;
}
sP(1);
oBarkley.move='';
global.freeze=1;
pos0=0;
tos0=0;
pos1=0;
pos3=0; //equip
bromide=0;
stage=0;
desc='';
imax=0;
phase=0;
for (v=0; v&lt;100; v+=1) sal[v]='';
sal[0]='Buy';
sal[1]='Quit';
item[0]='';
keeper=-1;
substage=-1; //view status
sibstage=-1; //weapon
itmstage=''; //use item
sEquipped();
y+=0.5;
x+=0.5;
yn=4;
shrek=0;
isc=0; //scroll</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.freeze=0;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//for (t=0; t&lt;100; t+=1) if (global.item_id[t]!="") rmax=t;
//Hold
if (stage=0) { isc=0; tos0=pos0; }
//
if (phase=0) {

 if (sKey(global.key_right,1) &amp;&amp; bromide=0) { sP();
  if (stage=0) pos0=min(2,pos0+1);
  if (stage=1) pos0=min(2,pos0+1);
  if (stage=2) { if (pos0=23) { if (isc!=ceil((rmax-23)/2)*2) { pos0=22; isc+=2; } } else pos0=min(23,pos0+1); } //was rmax
 }
 
 if (sKey(global.key_down,1) &amp;&amp; bromide=0) { sP();
  if (substage!=-1) {
   pos3=min(2,pos3+1);
  } else {
   if (stage=2) { if (pos0&gt;21) { isc+=2; } else pos0=min(23,pos0+2); }
   if (stage=3) {
    pos0=pos0+1;
    if (global.party[pos0]=-1) pos0-=1;
   }
  }
 }
 
 if (sKey(global.key_left,1) &amp;&amp; bromide=0) { sP();
  if (stage=0) pos0=max(0,pos0-1);
  if (stage=1) pos0=max(1,pos0-1);
  if (stage=2) { if (pos0=0) { if (isc!=0) { pos0=1; isc-=2; } } else pos0=max(0,pos0-1); }
 }
 
 if (sKey(global.key_up,1) &amp;&amp; bromide=0) { sP();
  if (substage!=-1) {
   pos3=max(0,pos3-1);
  } else {
   if (stage=2) { if (pos0&lt;2) { isc-=2; } else pos0=max(0,pos0-2); }
   if (stage=3) pos0=max(0,pos0-1);
  }
 }
 
 if (stage=2) {
  isc=min(isc,ceil((qmax-24)/2)*2); //
  isc=max(0,isc);
  pos0=min(pos0,qmax-isc);
  if (item[pos0+isc]="") pos0-=1;
 }
 pos0=max(0,pos0);

if (sKey(global.key_action,1)) { sP(1);
if (stage=0) {
if (pos0=0) {
stage=3;
pos0=0;
} else if (pos0=1 &amp;&amp; item[0]!='No items') {
stage=2;
pos0=0;
} else if (pos0=2) {
stage=1;
pos0=1;
}
} else if (stage=1) {
if (pos0=1) { stage=0; pos0=2; }
else { global.freeze=0; if (room=RomTest) room_goto(RomConfig); else room_goto(RomTitle); }
} else if (stage=2) {
refItem(global.item_id[pos0+isc]);
if (global.tClass='Item') { 
if (global.tEffect='Picture') {
if (global.tName="Ivory's Bromide") bromide=1;
if (global.tName="Shrekmono Piccie") bromide=2;
if (global.tName="Gun's Sticker") bromide=3;
if (global.tName="Battlers Tome 1") bromide=4;
if (global.tName="Battlers Tome 2") bromide=5;
if (global.tName="Battlers Tome 3") bromide=6;
} else if (global.tEffect='Warp Device') {
event_user(15);
} else if (global.tEffect='Magic Lamp') {
with (oController) event_user(12);
} else if (global.tEffect='Summon Hiratio') {
sP(-1);
} else {
itmstage=global.item_id[pos0+isc];
itmslot=pos0;
stage=3;
pos0=0;
}
}
} else if (stage=3) {
if (itmstage!='') { 
sound_play(mItemUse);
sItemUse(itmstage,global.party[pos0]);
sItem(itmstage,-1);
sItemShow("global.item_id",0,0,2,2);
if (sItem(itmstage)&lt;1) {
itmstage='';
stage=2;
pos0=0;
}
} else if (substage=-1) { 
substage=pos0;
pos3=0;
} else { //equip
sibstage=pos0; 
phase=1; 
stage=1; 
if (pos3=0) sItemSep(global.char_weapon[global.party[pos0]]); 
else if (pos3=1) sItemSep(global.char_armour[global.party[pos0]]); 
else sItemSep("Bling");
sItemShow("itemf",2,0,2,1);
pos0=0; //reset when go to equip
}
}
}
if (sKey(global.key_cancel,1)) { sP(-1);
if (bromide!=0) bromide=0;
else if (stage=1) { stage=0; pos0=2; }
else if (stage=0) { global.freeze=0; instance_destroy(); }
else if (stage=2) { stage=0; pos0=1; }
else if (stage=3) { 
if (itmstage!='') { itmstage=''; pos0=0; stage=2; }
else if (substage=-1) { stage=0; pos0=0; sItemShow("global.item_id",0,0,2,2); }
else { substage=-1; }
}
}
if (stage=0) {
if (pos0=0) desc="Change equipment, view status and skillz.";
if (pos0=1) desc="View and use items gathered on your expedition.";
if (pos0=2) desc="Leave the post-cyberpocalypse.";
} else if (stage=1) {
if (pos0=1) desc="Go back to the time-out menu.";
if (pos0=2) desc="Take a break and chill.";
} else if (stage=2) {
pos0=min(imax,pos0);
refItem(item[pos0+isc]);
desc=global.tDesc;
} else if (stage=3) {
if (substage!=-1) {
if (pos3=0) desc="Change " +sAlBhed(global.char_name[global.party[substage]],1) +"'s weapon.";
if (pos3=1) desc="Change " +sAlBhed(global.char_name[global.party[substage]],1) +"'s armour.";
if (pos3=2) desc="Change " +sAlBhed(global.char_name[global.party[substage]],1) +"'s bling.";
} else if (itmstage='') {
desc="Select a character and press action to view status.";
} else desc="Use " + itmstage + " on who? ("+ string(global.item_amount[itmslot]) + " left)";
}
} else { ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////BUY AND SELL
if (sKey(global.key_right,1)) { sP();
if (stage=0) pos0=min(2,pos0+1);
if (stage=1) {
pos1+=1;
if (global.party[pos1-1]=-1) pos1-=1;
if (sibstage!=-1) pos1=0;
}
if (stage=2) { if (pos0=23) { if (isc!=ceil((rmax-23)/2)*2) { pos0=22; isc+=2; } } else pos0=min(23,pos0+1); }
if (stage=0) {
if (sal[pos0]='') pos0-=1;
if (sal[pos0]='Buy') sItemShow("("+string(keeper)+").itemf",2,0,2,1);
else if (sal[pos0]='Sell') sItemShow("global.item_id",1,0,2,2);
}
}
if (sKey(global.key_down,1)) { sP();
if (stage=2) { if (pos0&gt;21) { isc+=2; } else pos0=min(23,pos0+2); }
if (stage=1) { if (pos0&gt;7) isc+=1; else pos0=min(8,pos0+1); }
}
if (sKey(global.key_left,1)) { sP();
if (stage=0) pos0=max(0,pos0-1);
if (stage=1) pos1=max(0,pos1-1);
if (stage=2) { if (pos0=0) { if (isc!=0) { pos0=1; isc-=2; } } else pos0=max(0,pos0-1); }
if (stage=0) {
if (sal[pos0]='Buy') sItemShow("("+string(keeper)+").itemf",2,0,2,1);
else if (sal[pos0]='Sell') sItemShow("global.item_id",1,0,2,2);
}
}
if (sKey(global.key_up,1)) { sP();
if (stage=2) { if (pos0&lt;2) { isc-=2; } else pos0=max(0,pos0-2); }
if (stage=1) { if (pos0=0) isc-=1; else pos0=max(0,pos0-1); }
}

if (stage=2) {
 isc=min(isc,ceil((qmax-24)/2)*2); //-7
 isc=max(0,isc);
 pos0=min(pos0,qmax-isc);
 if (item[pos0+isc]="") pos0-=1;
}
if (stage=1) {
 isc=min(isc,qmax-9);
 isc=max(0,isc);
 if (isc!=0) pos0=min(pos0,qmax-isc);
 else pos0=min(pos0,qmax-1);
}
pos0=max(0,pos0);

if (sKey(global.key_action,1)) { 
if (stage=0) { sP(1);
if (sal[pos0]='Buy') {
stage=1;
pos0=0;
} else if (sal[pos0]='Sell' &amp;&amp; item[0]!='No items') {
stage=2;
pos0=0;
} else if (sal[pos0]='Leave') { 
global.freeze=0; instance_destroy(); 
}
} else if (stage=2) { ///////////////////////////////////////////////////////////sell
refItem(item[pos0+isc]);
if (global.tCansell=1) {
sItem(item[pos0+isc],-1);
sItem('gold',floor(global.tValue/2));
sItemShow('update');
sP(1);
} else sP(-1);
} else if (stage=1) {
 refItem(item[pos0+isc]);
 if ((sItem('goldcheck',global.tValue)!=0 &amp;&amp; sItem(item[pos0+isc])&lt;99) || sibstage!=-1) { sP(1); //buy goes here gz
  if (sibstage=-1) {
   if (global.vending=0) sItem('gold',-global.tValue);
   else sItem('gold',-(global.tValue*2));
   sItem(item[pos0+isc],1);
  }
  //equip after buy
  //show_message(string(pos1) + " pos1 " + string(vaf[pos0]) + " vaf " + string(pos0) + " pos0 " + string(sibstage));
  if ((pos1!=0 &amp;&amp; vaf[pos0]&lt;3) || sibstage!=-1) {
   sItem(item[pos0+isc],-1);
   if (sibstage=-1) nat=pos1-1;
   else nat=sibstage;
   //show_message('equip attempt on ' + string(global.party[nat]) + ' with item class ' + global.tClass);
   if (global.tClass="Nothing") {
    if (pos3=0) { sItem(global.char_eweapon[global.party[nat]],1); global.char_eweapon[global.party[nat]]="Nothing"; }
    if (pos3=1) { sItem(global.char_earmour[global.party[nat]],1); global.char_earmour[global.party[nat]]="Nothing"; }
    if (pos3=2) { sItem(global.char_eaccess[global.party[nat]],1); global.char_eaccess[global.party[nat]]="Nothing"; }
   } else {
    if (global.tClass=eweapon[nat]) {
     sItem(global.char_eweapon[global.party[nat]],1);
     global.char_eweapon[global.party[nat]]=item[pos0+isc];
    }
    if (global.tClass=earmour[nat]) {
     sItem(global.char_earmour[global.party[nat]],1);
     global.char_earmour[global.party[nat]]=item[pos0+isc];
    }
    if (global.tClass='Bling') {
     sItem(global.char_eaccess[global.party[nat]],1);
     global.char_eaccess[global.party[nat]]=item[pos0+isc];
    }
   } 
  }
  //do equip malarky
  sItemShow('update');
  if (sibstage!=-1) {
   if (pos3=0) sItemSep(global.char_weapon[global.party[sibstage]]); 
   else if (pos3=1) sItemSep(global.char_armour[global.party[sibstage]]); 
   else sItemSep("Bling");
   sItemShow("itemf",2,0,2,1);
  }
 } else sP(-1); //cant buy
}
}

if (sKey(global.key_cancel,1)) { sP(-1);
if (stage=2) { stage=0; pos0=1; isc=0; }
else if (stage=1) { 
if (sibstage=-1) { //sibstage
stage=0; pos0=0; 
} else {
phase=0; stage=3; pos0=substage; isc=0;
}
} else if (stage=0) { global.freeze=0; instance_destroy(); }
}
if (stage=0) {
if (sal[pos0]='Buy') desc="Buy items.";
if (sal[pos0]='Sell') desc="Sell items.";
if (sal[pos0]='Leave') desc="Leave shop.";
} else if (stage=2) {
//pos0=min(imax,pos0);
refItem(item[pos0+isc]);
desc=global.tDesc;
} else if (stage=1) {
//pos0=min(imax,pos0);
refItem(item[pos0+isc]);
desc=global.tDesc;
}
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (oController) event_user(14);</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(x+gx,y+sp+pp,sAlBhed(global.char_name[i],1));
draw_text(x+gx,y+sp+pp+10,"Arm"); 
draw_text(x+gx,y+sp+pp+20,"Body"); 
draw_text(x+gx,y+sp+pp+30,"Bling");
draw_set_color(make_color_rgb(200,200,200));
draw_text(x+gx+28,y+sp+pp+10,global.char_eweapon[i]);
draw_text(x+gx+28,y+sp+pp+20,global.char_earmour[i]);
draw_text(x+gx+28,y+sp+pp+30,global.char_eaccess[i]);
draw_set_color(c_white);
if (global.char_res2[i]!='') {
draw_set_color(c_fuchsia);
draw_text(x+gx+134,y+sp+pp,global.char_res2[i]);
draw_set_color(c_white);
} else draw_text(x+gx+134,y+sp+pp,"Healthy");
draw_text(x+gx+134,y+sp+pp+10,"VP ");
draw_text(x+gx+134,y+sp+pp+20,"BP ");
draw_set_color(make_color_rgb(255,128,128)); draw_text(x+gx+134+18,y+sp+pp+10,string(global.char_chp[i])+'/'+string(global.char_rhp[i]));
draw_set_color(make_color_rgb(128,128,255)); draw_text(x+gx+134+18,y+sp+pp+20,string(global.char_czp[i])+'/'+string(global.char_rzp[i]));
draw_set_color(c_white);
draw_text(x+gx+134,y+sp+pp+30,"Speed "); 
draw_text(x+gx+134+73,y+sp+pp+30,"Power "); 
draw_text(x+gx+134+73,y+sp+pp+10,"Guard "); 
draw_text(x+gx+134+73,y+sp+pp+20,"Brain "); 
draw_set_color(make_color_rgb(128,255,128));
draw_text(x+gx+134+34,y+sp+pp+30,string(floor(global.char_rfootwork[i])));
draw_text(x+gx+134+73+32,y+sp+pp+30,string(global.char_rattack[i]));
draw_text(x+gx+134+73+32,y+sp+pp+10,string(global.char_rdefense[i]));
draw_text(x+gx+134+73+32,y+sp+pp+20,string(global.char_rzauberacity[i]));
draw_set_color(c_white);</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sV();
//50 spacing
image_speed=global.rd/2;
draw_sprite(sStart,0,x,y);
if (phase=0) {
if (stage=0) {
//if (pos0=0) draw_sprite(sStart,1,x,y);
if (pos0=1) draw_sprite(sStart,2,x,y);
}
if (stage=2) draw_sprite(sStart,2,x,y);
}
sFont(Courier8,c_white);
draw_text(x+7,y+223,desc);
if (phase=0) {
if (stage!=1) {
draw_text(x+20,y+3,"EQUIP");
draw_text(x+20+60,y+3,"ITEM");
draw_text(x+20+60+60,y+3,"QUIT");
if (stage=0) draw_sprite(sDialogBlip,image_index,x+7+(tos0*60),y+4);
else draw_sprite(sDialogBlip,0,x+7+(tos0*60),y+4);
} else {
draw_text(x+7,y+3,"QUIT VIDCON?");
draw_text(x+20+76,y+3,"NAH");
draw_text(x+20+76+45,y+3,"YEAH");
draw_sprite(sDialogBlip,image_index,x+36+(pos0*45),y+4);
}
} else { //shop
if (sibstage=-1) {
draw_text(x+20,y+3,sal[0]);
draw_text(x+20+60,y+3,sal[1]);
draw_text(x+20+60+60,y+3,sal[2]);
if (stage=0) draw_sprite(sDialogBlip,image_index,x+7+(tos0*60),y+4);
else draw_sprite(sDialogBlip,0,x+7+(tos0*60),y+4);
} else {
draw_text(x+20,y+3,"EQUIP");
draw_text(x+20+60,y+3,"ITEM");
draw_text(x+20+60+60,y+3,"QUIT");
if (stage=0) draw_sprite(sDialogBlip,image_index,x+7+(tos0*60),y+4);
else draw_sprite(sDialogBlip,0,x+7+(tos0*60),y+4);
}
}
//status
gx=53+4;
if ((phase=0 &amp;&amp; stage=0 &amp;&amp; pos0=0) || (phase=0 &amp;&amp; stage=3)) {
if (substage=-1) {
for (q=0; global.party[q]!=-1; q+=1) {
sp=q*50;
i=global.party[q];
draw_sprite(sStart,1,x,y+sp);
if (stage=3 &amp;&amp; pos0=q) draw_sprite(sFaces,12,x+2,y+sp+21);
else draw_sprite(sFaces,0,x+2,y+sp+21);
if (global.victorian=0) draw_sprite(sFaces,global.char_face[i],x+2,y+sp+21);
else draw_sprite(sFaces0,global.char_face[i],x+2,y+sp+21);
sFont(Courier8,c_white);
pp=19+4;

event_user(0); //draw top equip stuff

}
} else { //status
draw_sprite(sStart,4,x,y);
for (q=0; global.party[q]!=-1; q+=1) {
sp=q*50;
i=global.party[q];
if (substage=q) draw_sprite(sFaces,12,x+2,y+sp+21);
else draw_sprite(sFaces,0,x+2,y+sp+21);
if (global.victorian=0) draw_sprite(sFaces,global.char_face[i],x+2,y+sp+21);
else draw_sprite(sFaces0,global.char_face[i],x+2,y+sp+21);
}
sp=0;
pp=19+4;
i=global.party[substage];
sFont(Courier8,c_white);
if (substage!=-1) { //border deals
draw_sprite(sStartHilight,2,x+51,y+sp+pp+11+(10*pos3));
}

event_user(0); //draw top equip stuff

draw_text(x+gx,y+sp+pp+50,"Level "+string(global.char_res1[i])+" " + global.char_class[i]);
draw_text(x+gx,y+sp+pp+60,"Total XP " + string(floor(global.char_xp[i])));
qh=0;
for (qg=1; qg&lt;=global.char_res1[i]; qg+=1) { qh+=200*qg; }
draw_text(x+gx+135,y+sp+pp+60,"XP to next Level " + string(floor(qh - global.char_xp[i])));
draw_text(x+gx+135,y+sp+pp+70,"Weapon Class: " + global.char_weapon[i]);
draw_text(x+gx,y+sp+pp+70,"Armour Class: " + global.char_armour[i]);
draw_text(x+gx,y+sp+pp+90,"Skillz");
for (l=0; global.char_eskill[i,l]!=''; l+=1) {
draw_text(x+gx+((l mod 2)*135),y+pp+90+12+((l div 2)*12),global.char_eskill[i,l]);
}
}
}

if (stage=2 || (stage=0 &amp;&amp; pos0=1)) { //inven
if (stage=2) selected=pos0;
else selected=-1;
sItemShow('draw');
}
//shoppe
if (phase=1 &amp;&amp; ((stage=1 || stage=2) || (stage=0 &amp;&amp; sal[pos0]!="Leave"))) {
if (stage=2 || (stage=0 &amp;&amp; sal[pos0]="Sell")) { 
draw_sprite(sStart,2,x,y); 
yy=41+yn; 
} else { 
draw_sprite(sStart,3,x,y); 
yy=77+yn; 
sFont(Arial8,c_white); 
if (sibstage=-1) draw_text(x+188-5,y+51,'BUY'); 
}
if (stage=2 || stage=1) selected=pos0;
else selected=-1;
sItemShow('draw');
if (stage=1 || (stage=0 &amp;&amp; sal[pos0]="Buy")) {
if (sibstage=-1) {
for (q=0; global.party[q]!=-1; q+=1) {
sp=q*28;
draw_sprite_part(global.char_res0[global.party[q]],0,24,64,24,32,x+213-4+sp,y+42);
}
} else { //draw one
sp=-28;
draw_sprite_part(global.char_res0[global.party[sibstage]],0,24,64,24,32,x+213-4+sp,y+42);
}
}
}
//gold AND TIME
sFont(Courier8,c_white);
draw_text(x+199,y+3,sFormat(global.hours)+':'+sFormat(global.minutes)+':'+sFormat(floor(global.seconds)));
draw_text(x+270,y+3,string(global.gold));
//Ivory latta bromdie
if (bromide!=0) {
draw_set_alpha(0.5);
draw_set_color(c_black);
draw_rectangle(x,y,x+321,y+241,0);
draw_set_alpha(1);
draw_sprite(sBromide0,bromide-1,x+160,y+120);
}</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
