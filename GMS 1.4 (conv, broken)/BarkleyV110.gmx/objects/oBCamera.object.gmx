<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sViewInit();
//Rest
enemy=0; finish=0.5; global.turn=id; //stall ai
alarm[0]=60; //turns
fade=1; //initial fade
revfade=0;
vw=320; //zoom widht
vh=240;
aw=0; //attrition width
ah=0;
firststrike=global.batset; //1 is ally, -1 is enemy strike
over=0; //you win
gover=0; //enemy win
rover=0; //run away
slav=instance_create(320,192,oBPanner);
slov=instance_create(320,192,oBDummy); //camera middle
global.b_cmiddle=slov;
middle=instance_create(320,240,oBDummy);
right=instance_create(320+120,240,oBDummy);
left=instance_create(320-120,240,oBDummy);
global.b_left=left;
global.b_middle=middle;
trn=floor(random(4)); //was 5
if (trn=0) {
//plain
} else if (trn=1) { //zoom out
ig=45;
repeat (45) { vw-=6.4; vh-=4.8; aw+=3.2; ah+=2.4; }
} else if (trn=4) { //zoom in
ig=45;
repeat (45) { vw+=6.4; vh+=4.8; aw-=3.2; ah-=2.4; }
} else if (trn=3) { //left
slav.x=160;
} else if (trn=2) { //right
slav.x=room_width-160;
}
sViewFollow(global.b_middle);
view_yview[0]+=50;
event_user(0); //load batle chars
sViewFollow(slav);
view_wview[0]=vw;
view_hview[0]=vh;
view_xview[0]+=aw;
view_yview[0]+=ah+50;
view_xview[1]=view_xview[0];
view_yview[1]=view_yview[0];
//
if (firststrike=0) global.descriptor="It's time to slam jam!";
else if (firststrike=1) global.descriptor="You surprised the enemy!";
else global.descriptor="You are being pre-emptively attacked!";
global.batset=0; //reset it
oBattleMenu.alarm[0]=60;
global.b_cover=0;
global.b_scover=0; //skip cover for diabetets and such
global.b_evade=0;
global.b_victory=0;
//Create background image
sprite_replace(sBBattle,"BG\BG"+ string(global.b_back) +".gif",1,0,0,0,1,0,0);
backdrop=instance_create(0,20.5,oBDummy);
backdrop.depth=5;
backdrop.visible=1;
backdrop.sprite_index=sBBattle;
backdrop.image_speed=0;
backdrop.image_index=global.b_back;
if (global.b_music!=-1) sA('loop',global.b_music);</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (i=0; global.b_party[i]!=-999; i+=1) {
if (global.b_pid[i]._vp&lt;=0) global.b_pid[i].kill=1;
}
sVerifyStats();
room_speed=30;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//TURN FAILSAFE - not yet done
if (global.turn=0) exit;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.turn.finish=1;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Need to get out of status here
//Possibly make until view is centered do not continue
global.b_obj=slov; //set to middle
if (global.b_evade=2) {
global.b_evade=0; //reset evade
oBHoopz.defending=0;
oBHoopz.image_speed=0.2+random(0.05);
oBHoopz.sprite_index=oBHoopz.stand;
}
if (instance_exists(oBCyberdwarf)) { if (oBCyberdwarf._vp&lt;=0) global.b_cover=0; }
//if (global.b_obj!=slov || global.b_focus=0) { alarm[1]=2; exit; }
if (global.b_fobj!=slov) { alarm[1]=2; exit; } //descriptor='' messed it up
//Kill enemies
global.temp=0;
with (oBattler) {
if (enemy=1 &amp;&amp; _vp&lt;=0) { kill=1; global.temp=1; }
if (point_distance(x,y,slav.x-footx,slav.y-footy)&gt;16) global.temp=1; //was 15
}
if (global.temp=1) { global.descriptor="  "; oBattleMenu.alarm[0]=22; alarm[1]=21; exit; }
/////////////////////////////////Enemy win battle
global.temp=0;
with (oBattler) { if (kill=0 &amp;&amp; enemy=0) global.temp=1; }
if (global.temp=0) { global.b_victory=-1; gover=1; exit; }
/////////////////////////////////You win battle
global.temp=0;
with (oBattler) { if (_vp&gt;0 &amp;&amp; enemy=1) global.temp=1; }
if (global.temp=0) { global.b_victory=1; over=1; oBattleMenu.state='pause'; exit; }
/////////////////////////////////First strike or regular
if (firststrike=0) {
sAgility('sort');
global.turn=arrayi;
} else {
global.turn=fastest[fest];
fest+=1;
if (fest&gt;fastmax) firststrike=0;
}
with (oBattler) { hilight=0; finish=0; }
global.turn.onrl=0; //barkley only
////////////////////////////////Check running
if (global.turn.running=1) {
if (floor(random(3))=0) {
global.descriptor="Failed to run from battle!";
oBattleMenu.state='pause';
oBattleMenu.alarm[5]=30;
} else {
oBattleMenu.state='pause';
rover=1;
with (oBattler) { if (enemy=0 &amp;&amp; kill=0) {
attack=0; defending=0; sprite_index=runs; image_speed=0.25; image_xscale=-1; running=1; hspeed=3;
} }
exit;
}
}
//////////////////////////////Do rest
if (global.turn.enemy=0) {
oBattleMenu.state='names';
oBattleMenu.pos0=0;
oBattleMenu.asel=2;
oBattleMenu.action=""; //new
global.turn.hilight=1;
if (global.turn.defending=1) {
if (global.turn.object_index=oBBarkley) { global.turn._rguard-=global.turn.defamt; } //sDamageC(global.turn,"Guard Down",c_ltgray);
if (global.turn.object_index=oBCyberdwarf) { global.turn._rguard-=global.turn.defamt; global.b_cover=0; }
sVerifyStats();
}
global.turn.defending=0;
global.turn.running=0;
global.turn.image_xscale=1;
global.turn.image_speed=0.2+random(0.05);
global.turn.sprite_index=global.turn.stand;
//global.b_obj=slov;
}

//Conditions, need clause if you die
if (global.turn.c_diabetes=1) { //Hurt from diabetes, CAN DIE? play sound?
target=global.turn;
_brain=target._brain;
global.b_scover=1;
sMoveSet(0,1+floor(global.turn._rvp*0.05),0,0,'enemy',999,1);
if (global.turn.kill=1 || global.turn._vp&lt;=0) {
global.turn._vp=1; global.turn.kill=0; //global.turn.sprite_index=stand;
}
global.b_scover=0;
}
global.turn.c_hou-=1;
global.turn.c_kou-=1;
global.turn.c_sou-=1;
global.turn.c_mou-=1;
if (global.turn.c_handicapable=1) {
if (global.turn.c_hou&lt;=0) {
sBCondition('cure','handicapable',global.turn);
global.descriptor=global.turn.name + " fought off Handicapable!";
oBattleMenu.state='pause';
oBattleMenu.alarm[5]=60;
exit;
}
}
if (global.turn.c_fouled=1) {
sBCondition('cure','fouled',global.turn);
global.descriptor=global.turn.name + " fouled and missed a turn!";
oBattleMenu.state='pause';
//oBattleMenu.alarm[5]=60;
//alarm[1]=59;
alarm[2]=60;
exit;
}
if (global.turn.c_stroke=1) {
if (global.turn.c_kou&lt;=0) {
sBCondition('cure','stroke',global.turn);
global.descriptor=global.turn.name + " fought off Stroke!";
oBattleMenu.state='pause';
oBattleMenu.alarm[5]=60;
exit;
} else {
global.descriptor=global.turn.name + " cannot move!";
oBattleMenu.state='pause';
alarm[2]=60;
//oBattleMenu.alarm[5]=60;
//alarm[1]=59;
exit;
}
}
if (global.turn.c_montezuma=1) {
if (global.turn.c_mou&lt;=0) {
sBCondition('cure','montezuma',global.turn);
global.descriptor=global.turn.name + " fought off Montezuma's Revenge!";
oBattleMenu.state='pause';
oBattleMenu.alarm[5]=60;
exit;
}
}
if (global.turn.c_slowed=1) {
if (global.turn.c_sou&lt;=0) {
sBCondition('cure','timeout',global.turn);
global.descriptor=global.turn.name + " fought off Timeout!";
oBattleMenu.state='pause';
oBattleMenu.alarm[5]=60;
exit;
}
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//get exp and gold
global.b_gold=0;
global.b_exp=0;
with (oBattler) {
global.b_gold+=_gold;
global.b_exp+=_exp;
}
//turns
sAgility('init');
alarm[1]=1;
if (firststrike!=0) {
if (firststrike=-1) sIntFastest(1);
else sIntFastest(0);
fest=0;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sEnemyAI();
//Run from battle
if (rover&gt;0) {
global.b_obj=right;
if (rover=2) global.descriptor="You successfully ran from battle.";
rover+=1;
if (rover=3) { sA('stopall'); sS(mMutantballer2); }
if (rover=60) { fade=0; revfade=0.01; }
if (rover&gt;120) { sBattleExport(); global.batresult='run'; room_goto(global.b_room); }
}

//Win battle
if (over&gt;0) {
oBattler.won=1;
if (over=2) { plr=-1; global.b_obj=right; }
if (over=3) { over=61; sA('stopall'); sA('loop',mVictory); }
if (over=61) global.descriptor="Gained " + string(global.b_exp) + " exp";
if (over=121) global.descriptor="Found " + string(global.b_gold) + " neo-shekels";
over+=1;
if (over&gt;179) { if (plr!=-1) (instance_create(plr.fx-20+random(40),plr.fy,oSparkles)).target=plr; }
if (over=180) { 
sBattleExport(); 
//Give rewards, add items later. Maybe have dialog after battle?
global.b_split=0;
with (oBattler) global.b_split+=!enemy;
for (i=0; global.party[i]!=-1; i+=1) global.char_xp[global.party[i]]+=floor(global.b_exp/global.b_split);
global.gold+=global.b_gold;
}
if (over=181) { 
dl=sBattlePreLevel();
if (dl=1) {
global.descriptor=msg0;
} else over=180+90; 
}
if (over=181+45) { if (msg1="") over=180+90; else global.descriptor=msg1; }
if (over=180+90) { 
if (dl=0) { fade=0; revfade=0.01; }
else over=180;
}
if (over&gt;260+45) event_user(1);
}

//Lose battle
if (gover&gt;0) {
global.b_obj=right;
if (gover=2) global.descriptor="You have been slain.";
gover+=1;
if (gover=3) { sA('stopall'); }
if (gover=60) { fade=0; revfade=0.01; }
if (gover&gt;150) {
global.dieroom=9999;
global.diemessage="You have been slain in battle. The post cyberpocalypse rages on.";
room_goto(RomGameover);
}
}

//Start battle Transitions
if (trn!=-1) {
if (trn=1) {
if (ig&gt;0) { vw+=6.4; vh+=4.8; aw-=3.2; ah-=2.4; }
ig-=1; 
} else if (trn=4) { //noticde 4
if (ig&gt;0) { vw-=6.4; vh-=4.8; aw+=3.2; ah+=2.4; }
ig-=1; 
} else if (trn=3) {
slav.x+=5;
if (slav.x-320&gt;=5) { slav.x=320; trn=-1; }
} else if (trn=2) {
slav.x-=5;
if (slav.x-320&lt;=5) { slav.x=320; trn=-1; }
}
}

//View
sViewFollow(slav);
view_wview[0]=vw;
view_hview[0]=vh;
view_xview[0]+=aw;
view_yview[0]+=ah+50;
view_xview[1]=view_xview[0];
view_yview[1]=view_yview[0];</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Won battle
sA('stop',mVictory);
global.batresult='won';
room_goto(global.b_room);</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Create party, eventually enemy
sBattleImport();
//Enemy creation
for (k=0; global.bene[k]!=""; k+=1) {
sDelimit(global.bene[k]);
sto="cfc=instance_create(view_xview[0]+8+"+arr[2]+",view_yview[0]+4+"+arr[3]+","+arr[0]+");";
execute_string(sto);
with (cfc) level=real(oBCamera.arr[1]);
//with (cfc) refEnemy(orgname,real(oBCamera.arr[1]));
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_left);
if (revfade!=0 &amp;&amp; view_current!=0) {
draw_set_alpha(revfade);
draw_set_color(c_black);
draw_rectangle(0,0,641,481,0);
draw_set_alpha(1);
revfade=min(1,revfade+0.05);
}
if (fade=0 || view_current=0) exit;
draw_set_alpha(fade);
draw_set_color(c_black);
draw_rectangle(0,0,641,481,0);
draw_set_alpha(1);
fade=max(0,fade-0.05);</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
