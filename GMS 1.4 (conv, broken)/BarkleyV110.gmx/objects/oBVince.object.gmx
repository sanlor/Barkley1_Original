<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sBVinceStand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oBattler</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
facet=4;
option[2]='Laser';
option[1]='Programs';
option[0]="Recharge";
optiond[0]="Regain %20 VP and BP.";
optiond[1]="Load programs for maximal firepower.";
optiond[2]="Target multiple fiends with your laser.";
footy=25;
enemy=0; 
name="Vinceborg";
hurts=sBVinceHurt;
deads=sBVinceDead;
defend=sBVinceDefend;
runs=sBVinceRun;
item=sBVinceItem;
cele=sBVinceCelebrate;
_vp=7321;
_bp=200;
_power=20;
_speed=20;
_guard=20;
_brain=40;
walk=-999;
wspd=3;
//
image_speed=0.2;
bal=0; //Ball sprite
ok=-9; //So bball syncs with sprite image speed
stage=0;
doing=-1;
oy=y;
bou=0;
air=0;
pass=0;
pause=5;
//
jstage=0;
fstage=0;
pstage=0;
dummy=0; //for double team
master=id;
event_user(14);
prefin=-1;
infoh[0]="Quick Reference:";
info[0]="Action Key - Eye Laser###Press left or right for attack information.";
infoh[1]="Action Key - Eye Laser";
info[1]="200% base accuracy, low damage.#Move the target with the direction keys while attacking to switch targets.";
info[2]="";
infomax=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
finish=1;
prefin=-1;
attack=0;
image_speed=0.2;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (prefin=-2) exit;
//
if (global.turn=id) {
if (exec!=-1) { event_user(exec); doing=exec; exec=-1; }
if (doing&gt;=0 &amp;&amp; doing&lt;=9) {
event_user(doing);
} else if (attack=1) {
event_user(10); //jump
}
wdone=0;
if (walk!=-999) {
x+=lengthdir_x(wspd,point_direction(fx,fy,walk.fx+walkdist,walk.fy));
y+=lengthdir_y(wspd*2,point_direction(fx,fy,walk.fx+walkdist,walk.fy));
dist=point_distance(fx,fy,walk.fx+walkdist,walk.fy);
if (dist&lt;=wspd) { wdone=1; walk=-999; image_speed=0.2; sprite_index=sBBarkleyStand; }
}
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Laser
global.b_obj=global.b_middle;
if (stage=1) {
bou-=1;
if (bou&lt;0) {
with (oBTarget) instance_destroy();
alarm[5]=1;
stage=0;
prefin=-2;
sprite_index=sBVinceStand;
exit;
}
}
if (sKey(global.key_action,1)) {
if (stage=0) {
oBattleMenu.state='postshow';
sMoveSet(10,1,0.1,1,'enemy',200);
las=instance_create(x+5,y-30,oBTarget);
las.x2=target.x;
las.y2=target.y;
las.master=id;
global.b_obj=global.b_middle;
image_speed=0; image_index=1; sprite_index=sBVinceLaser;
stage=1;
bou=90;
}
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Refractor Beam
if (exec!=-1) { lou=0; bou=0; stage=0; global.b_obj=global.b_middle; }
if (stage=0) {
sprite_index=sBVinceRefract;
las=instance_create(x-12,y-26,oBTarget1);
las.master=id;
with (las) {
target=sEnemyTarget('random',1);
x3=target.x;
y3=target.y;
x4=x3;
y4=y3;
}
sSkillDmg('refract');
bou=0;
stage=1;
} else if (stage=1) {
bou+=1;
if (bou&gt;59) { bou=0; stage=2; with (oBTarget1) instance_destroy(); } //119
} else if (stage=2) {
sprite_index=sBVinceStand;
doing=-1; stage=0; image_xscale=1; alarm[5]=1;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (view_current!=0) exit;
draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,col,alp);
img=image_index;
event_user(15);</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
