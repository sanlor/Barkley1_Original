<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sBHoopzStand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oBattler</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Make spacebar not the key, all gun buttons need to work
//Make mash proof for skills
event_inherited();
facet=1;
option[2]='Brasts';
option[1]="Guns'tech";
option[0]='Evade';
//optiond[0]="Have a %50 chance of evasion for your turn.";
optiond[0]="100% dodge on one attack while evading.";
optiond[1]="Hurt opponents with gun's techniques.";
optiond[2]="Combat foes with a selected gun's attack.";
image_speed=0.2;
footy=36;
enemy=0;
name="Hoopz";
hurts=sBHoopzHurt;
deads=sBHoopzDead;
defend=sBHoopzDefend;
runs=sBHoopzRun;
item=sBHoopzItem;
cele=sBHoopzCelebrate;
_vp=190;
_bp=333;
_power=20;
_speed=11;
_guard=20;
_brain=40;
///Hoops test
slav=(instance_create(x,y,oBDummy));
skillusing=0;
shaft=10;
barrel=16; //16
rot=180;
face=180;
shoot=0;
back=0;
imgz=0; //this is gun was 3
charge=0;
reload=0;
jammed=0;
jamchance=10;
doshot=0;
clipsize=5;
clip=clipsize;
cfail=0; //for prefin when hold and not release
fdf=-999; //beta temp var
//Skils
mov=-999;
event_user(13); //skill
sprite_index=sBHoopzStand;
event_user(14);
prefin=-1; //defines constrains for finishing moves
exec=-1;
//Info
infoh[0]="Quick Reference:";
info[0]="Action Key - Accurate Shot#Cancel Key - Rapid Fire#Start Key - Mega Shot#Press left or right for attack information.";
infoh[1]="Action Key - Accurate Shot";
info[1]="200% base accuracy, medium damage.#Hold and release when the aimer lines up with the target.";
infoh[2]="Cancel Key - Rapid Fire";
info[2]="75% base accuracy, low damage.#Repeatedly press fire to shoot, press left and right to switch targets.";
infoh[3]="Start Key - Mega Shot";
info[3]="50% base accuracy, high damage.#Hold and release when the lines meet to charge; shot will miss on overcharge.";
info[4]="";
infomax=3;
//Skils
skll[2]="Gun's Slay#Press any firing key when the aimers reach the target for maximum accuracy.";
skll[0]="Bulletdance#Press any firing key when the gun appears to shoot at a random enemy.";
skll[1]="Tricky Gun's Assualt#Press any firing key rapidly when mid-air. Press any firing key to line up the Mega Shot when landed.";
skll[3]="Status Shot#Line up the aimers using any firing key to succeed in hitting the target.";
skll[4]="";
skllmax=3;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
doing=-1;
finish=1;
prefin=-1;
attack=0;
jammed=0;
reload=0;
image_xscale=1;
//
sprite_index=sBHoopzStand; image_speed=0.25;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>out=0;
stage+=1;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shoot=0;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (exec!=-1) { mov=exec; doing=exec; exec=-1;  event_user(13); }
if (mov!=-999) {
event_user(mov);
} else event_user(12);</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="23">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index=sBHoopzWalk;
image_xscale=1;
mash=0;
out=0;
shaft=10;
barrel=16; //16
rot=180;
face=180;
stage=0;
cou=0;
bou=0;
image_speed=0.25;
footx=0;
footy=32;
fx=x+footx;
fy=y+footy; //26
xo=-(40-17);
yo=10;
walkdist=150;
wspd=5;
walk=-999;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (attack=0) { exit; }
global.b_obj=global.b_cmiddle;
/////////////////////////////////////////////////////////////Turn ends
if (prefin=1) { //aimed
if (instance_exists(oBBullet)=0 &amp;&amp; instance_exists(oBReticule)=0) { prefin=-2; alarm[5]=35; }
}
if (prefin=2) { //charge
if (instance_exists(oBBullet)=0 &amp;&amp; instance_exists(oBCharger)=0 &amp;&amp; cfail=0) { prefin=-2; alarm[5]=35; }
}
if (prefin&gt;200) {
if (prefin=201) { prefin=-2; alarm[5]=35; oBattleMenu.hilight=-1; with (oBattler) hilight=0; }
else prefin-=1;
}
if (prefin=-2) exit;
//Rest
back=max(0,back-1);
if (reload=1) {
shoot=1;
face+=40; //20
if (face&gt;sface+360) { clip=clipsize; face=180; shoot=0; reload=0; }
exit;
}
x-=44; y-=15; //so bullets created properly
skillusing=0;
if ((prefin=-1 || prefin=2) &amp;&amp; instance_exists(oBBullet)=0) {
if (sKey(global.key_start) &amp;&amp; charge=0) { //////////////////////////mega charge
if (instance_exists(oBCharger)=0) {
shoot=1;
charge=1;
sound_play(mBGunCharge);
cfail=0;
prefin=2;
instance_create(x,y,oBCharger);
}
} else if (instance_exists(oBCharger) || charge=1) {
dir=point_direction(x,y,target.x,target.y);
rot=dir-5+random(10);
ooo=2;
if (instance_exists(oBCharger)=0) {
ooo=3;
} else if (sKey(global.key_start)=0) {
if (oBCharger.yy&gt;74) ooo=1;
else ooo=0;
}
if (ooo=1 || ooo=3) { //smoke
sound_stop(mBGunCharge);
if (ooo=1) charge=0;
else charge=2;
with (oBCharger) instance_destroy();
sound_stop(mBGunCharge);
sound_play(mBGunFail);
shoot=1;
alarm[0]=30;
dir=point_direction(x,y,target.x,target.y);
face=dir;
cfail=0;
repeat (15) {
ggg=instance_create(x,y,oBSmoke);
ggg.vspeed=0;
ggg.direction=point_direction(x,y,target.x,target.y);
ggg.speed=(5+random(5));
}
} else if (ooo=0) {
sound_stop(mBGunCharge);
charge=0;
shoot=1;
alarm[0]=30;
dir=point_direction(x,y,target.x,target.y);
face=dir;
xx=x+lengthdir_x(shaft,dir-90)+lengthdir_x(barrel,dir);
yy=y+lengthdir_y(shaft,dir-90)+lengthdir_y(barrel,dir);
execute_string('sound_play(mBGun'+string(imgz)+');');
bul=instance_create(xx,yy,oBBullet);
bul.type=2;
bul.speed=(10+random(5))/2; //mega shot slow
bul.direction=dir-3+random(6);
bul.img=imgz;
//global.b_obj=bul;
if (ceil(oBCharger.yy)=70) { vil=2.5; } //73
else vil=1+((1/71)*oBCharger.yy) //74
bul.image_xscale=vil;
bul.image_yscale=vil;
rot-=35+(vil*60)+random(20);
back=1;
with (oBCharger) instance_destroy();
}
} else if (sKey(global.key_start)=0) charge=0;
}

if (prefin=-1 || prefin&gt;200) { ////////////////////////////////////RAPID FIRE

if (prefin&gt;200) {
global.descriptor="Left / Right to change targets.";
with (oBattleMenu) {
sIntTarget(1);
if (sKey(global.key_left,1)) { sP(); pos1=max(0,pos1-1); }
if (sKey(global.key_right,1)) { sP(); pos1=min(targetmax,pos1+1); }
with (oBattler) hilight=0; 
targetid[pos1].hilight=1;
}
target=oBattleMenu.targetid[oBattleMenu.pos1];
oBattleMenu.hilight=target;
}

if (sKey(global.key_cancel) &amp;&amp; clip&gt;0 &amp;&amp; mash=0) {
if (prefin=-1) { clip=5; prefin=2900; instance_create(0,0,oBMagazine); } //was 2 secs, this is time to shoot
mash=3;
clip-=1;
if (clip=0) { clip=5; prefin=201; with (oBMagazine) instance_destroy(); }
//else if (floor(random(jamchance))=0) jammed=1;
shoot=1;
alarm[0]=30;
dir=point_direction(x,y,target.x,target.y);
face=dir;
xx=x+lengthdir_x(shaft,dir-90)+lengthdir_x(barrel,dir);
yy=y+lengthdir_y(shaft,dir-90)+lengthdir_y(barrel,dir);
execute_string('sound_play(mBGun'+string(imgz)+');');
bul=instance_create(xx,yy,oBBullet);
bul.type=0;
bul.speed=10+random(5);
bul.direction=dir-3+random(6);
bul.img=imgz;
rot-=20+random(5);
back=1;
} else if (sKey(global.key_cancel)=0) mash=max(0,mash-1);
}

if ((prefin=-1 || prefin=1) &amp;&amp; instance_exists(oBBullet)=0) { ////////////////////aimed shot
if (sKey(global.key_action) &amp;&amp; doshot&lt;2) {
if (doshot=0) {
shoot=1;
dir=point_direction(x,y,target.x,target.y);
face=dir;
xx=x+lengthdir_x(shaft,dir-90)+lengthdir_x(barrel,dir);
yy=y+lengthdir_y(shaft,dir-90)+lengthdir_y(barrel,dir);
prefin=1;
bullet=instance_create(xx,yy,oBReticule);
bullet.start=point_distance(bullet.x,bullet.y,target.x,target.y);
bullet.target=target;
bullet.direction=dir;
//global.b_obj=bullet;
}
doshot=1;
if (bullet.x&lt;target.x-60) doshot=2; //100
} else if (doshot!=0 &amp;&amp; doshot!=2.1) {
shoot=1;
alarm[0]=30;
dir=oBReticule.direction;
face=dir;
stray=min(60,point_distance(bullet.x,bullet.y,target.x,target.y))*2;
stray=abs(stray-120);
xx=x+lengthdir_x(shaft,dir-90)+lengthdir_x(barrel,dir);
yy=y+lengthdir_y(shaft,dir-90)+lengthdir_y(barrel,dir);
execute_string('sound_play(mBGun'+string(imgz)+');');
bul=instance_create(xx,yy,oBBullet);
bul.type=1;
bul.times=stray;
bul.speed=15+random(5);
bul.direction=dir;//-(stray/2)+random(stray);
bul.img=imgz;
//global.b_obj=bul;
rot-=20+random(5);
back=1;
if (doshot=1) doshot=0;
else doshot=2.1;
with (oBReticule) { instance_destroy(); }
} else if (sKey(global.key_action)=0) doshot=0;
}
x+=44; y+=15;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Status Shot
skillusing=1;
global.b_obj=global.b_middle;
if (stage=0) {
if (cou=0) { sound_play(mBGunReload); rot=180; face=180; sface=180; cou=1; }
shoot=1;
face+=20;
if (face&gt;sface+360) { face=180; shoot=0; reload=0; stage=1; sprite_index=sBHoopzSkill1; image_single=0; }
} else if (stage=1) {
cou+=1;
if (cou&gt;5) { cou=0; image_single+=1; if (image_single&gt;1) { stage=2; image_single=2; walk=target; } }
} else if (stage=2) {
image_angle+=20;
wspd=3;
walkdist=140;
dirt=point_direction(fx,fy,walk.fx+walkdist,walk.fy);
x+=lengthdir_x(wspd,dirt);
y+=lengthdir_y(wspd*2,dirt);
dist=point_distance(fx,fy,walk.fx+walkdist,walk.fy);
if (dist&lt;wspd) { stage=3; image_single=4; image_angle=0; cou=0; }
} else if (stage=3) {
out=1;
cou+=1;
if (cou&gt;5) { cou=0; stage=3.1; }
} else if (stage=3.1) {
dir=point_direction(x,y,target.x,target.y);
face=dir;
barrel+=10;
xx=x-30+lengthdir_x(shaft,dir-90)+lengthdir_x(barrel,dir);
yy=y-5+lengthdir_y(shaft,dir-90)+lengthdir_y(barrel,dir);
barrel-=10;
execute_string('sound_play(mBGun'+string(imgz)+');');
bul=instance_create(xx,yy,oBBullet);
dir=point_direction(xx,yy,target.x,target.y);
bul.type=3;
bul.speed=4;
bul.direction=dir;
bul.img=8;
rot-=20+random(5);
stage=8; //4;
} else if (stage=8) {
image_single=2;
image_xscale=-1;
out=0;
walk=slav;
image_angle-=20;
wspd=3;
walkdist=0;
dirt=point_direction(fx,fy,walk.fx+walkdist,walk.fy);
x+=lengthdir_x(wspd,dirt);
y+=lengthdir_y(wspd*2,dirt);
dist=point_distance(fx,fy,walk.fx+walkdist,walk.fy);
if (dist&lt;wspd) { stage=9; cou=0; image_single=1; image_angle=0; }
} else if (stage=9) {
cou+=1;
if (cou&gt;5) { cou=0; image_single-=1; if (image_single&lt;0) { mov=-999; image_xscale=1; alarm[5]=1; } }
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Gun's Slay
skillusing=1;
global.b_obj=global.b_middle;
if (stage=0) {
out=1;
sprite_index=sBHoopzSkill0;
walk=target;
wspd=2;
scj=0;
walkdist=80;
dirt=point_direction(fx,fy,walk.fx+walkdist,walk.fy);
x+=lengthdir_x(wspd,dirt);
y+=lengthdir_y(wspd*2,dirt);
dist=point_distance(fx,fy,walk.fx+walkdist,walk.fy);
cou+=1;
if (cou&gt;30) { stage=1; cou=0; }
} else if (stage=1) {
walk=slav;
wspd=2;
walkdist=80;
dirt=point_direction(fx,fy,walk.fx+walkdist,walk.fy);
x+=lengthdir_x(wspd,dirt);
y+=lengthdir_y(wspd*2,dirt);
dist=point_distance(fx,fy,walk.fx+walkdist,walk.fy);
cou+=1;
if (cou&gt;30) { stage=2; cou=0; out=2; }
} else if (stage=2) {
if (instance_exists(oBReticule)=0) { mov=-999; alarm[5]=1; }
}

if (out!=0) {
xo=-26;
yo=-20+random(30);
}
if (out=1) {
bou+=1;
if (bou&gt;6) {
bou=0;
dir=point_direction(x,y,target.x,target.y);
face=dir;
stray=2;
xx=x+lengthdir_x(shaft,dir-90)+lengthdir_x(barrel,dir);
yy=y+lengthdir_y(shaft,dir-90)+lengthdir_y(barrel,dir);
execute_string('sound_play(mBGun'+string(imgz)+');');
bul=instance_create(xx,yy,oBBullet);
bul.type=1;
bul.speed=15+random(5);
bul.direction=dir-(stray/2)+random(stray);
bul.img=imgz;
rot-=20+random(5);
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Tricky Gun's Assault
skillusing=1;
if (stage&gt;0 &amp;&amp; stage&lt;9) depth=target.depth-1;
if (stage=0) {
scj=0;
sprite_index=sBHoopzRun;
walk=target;
wspd=7;
walkdist=80;
dirt=point_direction(fx,fy,walk.fx+walkdist,walk.fy);
x+=lengthdir_x(wspd,dirt);
y+=lengthdir_y(wspd*2,dirt);
dist=point_distance(fx,fy,walk.fx+walkdist,walk.fy);
if (dist&lt;wspd) { stage=1; image_single=0; sprite_index=sBHoopzSkill3; }
} else if (stage=1) {
cou+=1;
if (cou&gt;3) { cou=0; image_single+=1; if (image_single&gt;1) { stage=2; image_single=1; } }
} else if (stage=2) {
image_angle+=3*3;
y-=2*3;
if (image_angle&gt;80) { stage=3; global.b_shadow=id; }
} else if (stage=3) {
if (cou=1) instance_create(x,y,oBShadow);
if (cou=0) { cou=1; path_start(pHoopz0,9,0,0); image_single=2; scj=0; }
out=1;
image_angle=point_direction(x,y,target.x,target.y);
face=image_angle;
} else if (stage=4) { //shoot after first land
out=0;
image_angle=0;
image_single=0;
cou+=1; //was 7 below
if (cou&gt;9) { cou=0; stage=5; image_single=3; out=2; sound_play(mBGunCharge); scj=0; }
} else if (stage=6) {
image_single=0;
cou+=1;
if (cou&gt;1) { stage=7; cou=0; image_single=1; } //7
} else if (stage=7) {
image_angle-=3*3;
y-=2*3;
if (image_angle&lt;-80) { stage=8; }
} else if (stage=8) {
if (cou=1) instance_create(x,y,oBShadow);
if (cou=0) { cou=1; path_start(pHoopz1,9,0,0); image_single=2; scj=0; }
out=1;
image_angle=point_direction(x,y,target.x,target.y);
face=image_angle;
} else if (stage=9) { //ending deal
out=0;
image_angle=0;
image_single=0;
image_xscale=-1;
cou+=1;
if (cou&gt;9) { cou=0; stage=10; image_single=3; out=2; sound_play(mBGunCharge); scj=0; }
} else if (stage=11) {
image_single=0;
image_xscale=1;
cou+=1;
if (cou&gt;1) { stage=12; cou=0; image_single=1; walk=slav; sprite_index=sBHoopzRun; image_xscale=-1; image_speed=0.25; }
} else if (stage=12) {
walkdist=0;
dirt=point_direction(fx,fy,walk.fx+walkdist,walk.fy);
x+=lengthdir_x(wspd,dirt);
y+=lengthdir_y(wspd*2,dirt);
dist=point_distance(fx,fy,walk.fx+walkdist,walk.fy);
if (dist&lt;wspd) { mov=-999; alarm[5]=1; }
}


/////Automated
if (out=1) {
scj+=1;
if (scj&gt;6) {
scj=0;
dir=point_direction(x,y,target.x,target.y);
xx=x+lengthdir_x(43,dir+10)//+lengthdir_x(barrel,dir);
yy=y+lengthdir_y(43,dir+10)//+lengthdir_y(barrel,dir);
execute_string('sound_play(mBGun'+string(imgz)+');');
bul=instance_create(xx,yy,oBBullet);
bul.type=0;
bul.speed=5+random(2.5);
bul.direction=dir-3+random(6);
bul.img=imgz;
rot-=20+random(5);
}
}

if (out=2) {
scj+=1;
if (scj&gt;12) {

charge=0;
dir=point_direction(x,y,target.x,target.y);
face=dir;
xx=x+11+lengthdir_x(shaft,dir-90)+lengthdir_x(barrel,dir);
yy=y-16+lengthdir_y(shaft,dir-90)+lengthdir_y(barrel,dir);
execute_string('sound_play(mBGun'+string(imgz)+');');
bul=instance_create(xx,yy,oBBullet);
bul.type=2;
bul.speed=10+random(5);
bul.direction=dir-3+random(6);
bul.img=imgz;
vil=2.5;
bul.image_xscale=vil;
bul.image_yscale=vil;
rot-=35+(vil*60)+random(20);
alarm[1]=15;
out=2.1;

}
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Bulletdance
skillusing=1;
global.b_obj=global.b_middle;
if (stage=0) {
walkdist=0;
walk=global.b_middle;
dirt=point_direction(fx,fy,walk.fx+walkdist,walk.fy);
x+=lengthdir_x(wspd,dirt);
y+=lengthdir_y(wspd*2,dirt);
dist=point_distance(fx,fy,walk.fx+walkdist,walk.fy);
if (dist&lt;wspd) { stage=1; image_single=0; sprite_index=sBHoopzSkill2; }
} else if (stage=1) {
cou+=1;
if (cou&gt;4) { cou=0; image_single+=1; if (image_single&gt;2) { stage=2; } img=image_single; }
} else if (stage=2) {
cou+=1;
//if (img=6 &amp;&amp; cou=4) sound_play(mBGun2);
if (cou&gt;1) {
cou=0;
if (img=6) { target=sEnemyTarget('random',1); out=1; img=3; dir=point_direction(x+xo,y+yo,target.x,target.y); face=dir; rot=face; }
else if (img=3) { img=4; out=0; }
else if (img=4) { target=sEnemyTarget('random',1); out=1; img=3; dir=point_direction(x+xo,y+yo,target.x,target.y); face=dir; rot=face; img=5; }
else if (img=5) { out=0; img=6; }
bou+=1;
}
image_single=img;
if (bou&gt;40) { stage=3; cou=0; bou=0; }
} else if (stage=3) {
cou+=1;
if (cou&gt;4) { cou=0; image_single+=1; if (image_single&gt;9) { image_index=-1; image_single=-1; stage=4; walk=slav; image_xscale=-1; sprite_index=sBHoopzWalk; image_speed=0.25; } }
} else if (stage=4) {
walkdist=0;
dirt=point_direction(fx,fy,walk.fx+walkdist,walk.fy);
x+=lengthdir_x(wspd,dirt);
y+=lengthdir_y(wspd*2,dirt);
dist=point_distance(fx,fy,walk.fx+walkdist,walk.fy);
if (dist&lt;wspd) { mov=-999; alarm[5]=1; }
}

/////////////////////////////////////shoot
if (out=1) {
execute_string('sound_play(mBGun'+string(imgz)+');');
out=2;
dir=point_direction(x+xo,y+yo,target.x,target.y); face=dir; rot=face;
xx=x+xo+lengthdir_x(shaft,dir-90)+lengthdir_x(barrel,dir);
yy=y+yo+lengthdir_y(shaft,dir-90)+lengthdir_y(barrel,dir);
bul=instance_create(xx,yy,oBBullet);
bul.type=0;
bul.speed=10+random(5);
bul.direction=dir-3+random(6);
bul.img=imgz;
rot-=20+random(5);
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stage+=1;
cou=0;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (view_current!=0) exit;
if (mov=0) {
if (out!=0) { //14,37 - 
rot=mean(rot,face); //causes gun to not overlap proper from 360 to 0
draw_sprite_ext(sBGun,imgz,x+xo,y+yo,1,1,rot,c_white,1);
}
draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,col,alp);
} else if (mov=1) { //52,24
rot=mean(rot,face);
xx=x+lengthdir_x(30,image_angle);
yy=y+lengthdir_y(30,image_angle);
xx=xx+lengthdir_x(17,image_angle-270);
yy=yy+lengthdir_y(17,image_angle-270);
if (out=1) draw_sprite_ext(sBGun,imgz,xx,yy,1,1,rot,c_white,1);
if (stage&lt;9) { if (out=2 || out=2.1) draw_sprite_ext(sBGun,imgz,x+11,y-16,1,1,rot,c_white,1); }
else { if (out=2 || out=2.1) draw_sprite_ext(sBGun,imgz,x-11,y-16,1,1,rot,c_white,1); }
draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,col,alp);
} else if (mov=2) { //12,24 - 38,39
rot=mean(rot,face);
xx=x+lengthdir_x(30,image_angle);
yy=y+lengthdir_y(30,image_angle);
xx=xx+lengthdir_x(17,image_angle-270);
yy=yy+lengthdir_y(17,image_angle-270);
if (out!=0 &amp;&amp; floor(random(2))=0) draw_sprite_ext(sBGun,imgz,x+xo,y+yo,1,1,rot,c_white,1);
draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,col,alp);
} else if (mov=3) {
if (stage=0) {
rot=mean(rot,face);
draw_sprite_ext(sBGun,imgz,x-44+3,y-15,1,1,rot,c_white,1);
draw_sprite(sBHoopz1,2,x,y);
} else if (image_single=2) {
draw_sprite_ext(sBHoopzSkill1,2,x,y,image_xscale,1,0,c_white,1);
draw_sprite_ext(sBHoopzSkill1,3,x+3,y+19,image_xscale,1,image_angle,c_white,1);
} else if (out=1) {
rot=mean(rot,face);
draw_sprite_ext(sBGun,imgz,x-30,y-5,1,1,rot,c_white,1);
draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,col,alp);
} else draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,col,alp);
} else if (mov=-999) { //6,20
if (jammed=1) draw_text(x,y-40,'!jammed!');
if (reload=0.5) draw_text(x,y-40,'!reload!');
if (shoot=1) {
rot=mean(rot,face); //causes gun to not overlap proper from 360 to 0
if (back=0) {
draw_sprite_ext(sBGun,imgz,x-44,y-15,1,1,rot,c_white,1);
draw_sprite(sBHoopz1,1,x,y);
} else {
draw_sprite_ext(sBGun,imgz,x-44+3,y-15,1,1,rot,c_white,1);
draw_sprite(sBHoopz1,2,x,y);
}
} else {
draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,col,alp);
//draw_sprite(sBHoopzStand,0,x,y);
}
}
img=image_index;
event_user(15);</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
