<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sBBallmonster</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oBattler</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
orgname='BBall Monster';
footx=0;
footy=45;
cantrun=1;
//Walk
ended=0;
walk=-999;
wspd=3;
walkdist=100; //how close to get to target
//
scl=1; //scale
rot=0; //rotation
tob=-999; //temp object particles
blaze=0; braze=0; //brace
inair=0; //if 1 stomp is next move
event_user(14);</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (blaze=2) { braze=1; }
else if (braze=1) { braze=0; _xpower-=floor(_rpower*.25); }
if (exec!=-1) { event_user(exec); exec=-1; }
if (doing!=-1) {
ended=1;
event_user(doing);
} else {
wdone=0;
if (ended=1) { ended=0; walk=slav; wdoing=-1; walkdist=0; }
if (walk!=-999) {
x+=lengthdir_x(wspd,point_direction(fx,fy,walk.fx-walkdist,walk.fy));
y+=lengthdir_y(wspd*2,point_direction(fx,fy,walk.fx-walkdist,walk.fy));
dist=point_distance(fx,fy,walk.fx-walkdist,walk.fy);
if (dist&lt;wspd) { if (walk=slav) { finish=1; } doing=wdoing; walk=-999; wdone=1; }
cou+=0.5;
if (cou&gt;wspd) {
cou=0;
if (img=5) img=2;
else if (img=2) img=3;
else if (img=3) img=4;
else img=5;
}
} else img=1;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Mega Stomp
if (exec!=-1) { canthit=0; global.descriptor="Mega Stomp"; sprite_index=sBBallmonster; fff=0; exec=-1; stage=0; doing=5; x=global.b_middle.x; y=global.b_middle.y-240; exit; }
global.b_obj=global.b_middle;
if (stage=0) {
if (fff=0) { fff=1; img=8; inair=0; vspeed=20; }
if (y+footy&gt;global.b_middle.y &amp;&amp; fff&lt;100) { y=global.b_middle.y-footy; sS(mBallmonster1) fff=100; sDamage(doing); vspeed=0; }
x=x-(4/2)+random(4);;
y=y-(4/2)+random(4);
if (fff&gt;130) { vspeed=0; hspeed=0; doing=-1; img=1; } //prevents skip
}
if (fff!=0) fff+=1;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Mega Jump
if (exec!=-1) { 
if (inair=1) { event_user(5); exit; }
if (blaze=2) { event_user(floor(random(4))); exit; } //do other
global.descriptor="Mega Jump"; fff=0; exec=-1; stage=0; doing=4; exit; 
}
global.b_obj=global.b_middle;
if (stage=0) {
if (fff=0) { fff=1; img=7; }
if (fff=15) { img=8; }
if (fff&gt;9) {
x=x-(4/2)+random(4);
y=y-(4/2)+random(4);
}
if (fff=30) { img=1; vspeed=-10; hspeed=1; sS(mBallmonster2); }
if (fff&gt;60) { canthit=1; sprite_index=sNuller; vspeed=0; hspeed=0; doing=-1; img=1; ended=0; finish=1; inair=1; x=slav.x; y=slav.y-50; } //prevents skip
}
if (fff!=0) fff+=1;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Juke Spin
if (inair=1) { event_user(5); exit; }
if (exec!=-1) { global.descriptor="Juke Spinner"; fff=1; exec=-1; wspd=6; walkdist=35; stage=0.5; doing=3; walk=target; img=10; exit; }
if (stage=0.5) {
x+=lengthdir_x(wspd,point_direction(fx,fy,walk.fx-walkdist,walk.fy));
y+=lengthdir_y(wspd*2,point_direction(fx,fy,walk.fx-walkdist,walk.fy));
dist=point_distance(fx,fy,walk.fx-walkdist,walk.fy);
if (dist&lt;wspd) { wdone=1; }
if (fff&gt;3) {
fff=1;
if (img=10) img=11;
else if (img=11) { img=12; }
else if (img=12) img=13;
else if (img=13) { img=10; }
}
if (wdone=1) { wdone=0; stage=0; img=10; fof=0; imx=img; }
} else if (stage=0) {
if (fff&gt;3) {
fff=1;
fof+=1;
if (imx=10) imx=11;
else if (imx=11) { imx=12; sound_play(mMutantballer0); sDamage(doing); }
else if (imx=12) imx=13;
else if (imx=13) { imx=10; }
img=imx;
}
depth=target.depth-1;
if (fff=0) { fff=1; }
if (fof=10) { target=sEnemyTarget('random',!enemy); walk=target; stage=0.6; }
if (fof=22) { target=sEnemyTarget('random',!enemy); walk=target; stage=0.6; } //20
if (fof&gt;33) { stage=1; fff=1; wdone=0; }
} else if (stage=0.6) {
x+=lengthdir_x(wspd,point_direction(fx,fy,walk.fx-walkdist,walk.fy));
y+=lengthdir_y(wspd*2,point_direction(fx,fy,walk.fx-walkdist,walk.fy));
dist=point_distance(fx,fy,walk.fx-walkdist,walk.fy);
if (dist&lt;wspd) { wdone=1; }
if (wdone=1) { wdone=0; stage=0; }
} else if (stage=1) {
walk=slav;
walkdist=6;
x+=lengthdir_x(wspd,point_direction(fx,fy,walk.fx-walkdist,walk.fy));
y+=lengthdir_y(wspd*2,point_direction(fx,fy,walk.fx-walkdist,walk.fy));
dist=point_distance(fx,fy,walk.fx-walkdist,walk.fy);
if (dist&lt;wspd) { wdone=1; }
if (fff&gt;3) {
fff=1;
if (img=10) img=11;
else if (img=11) { img=12; }
else if (img=12) img=13;
else if (img=13) { img=10; }
}
if (wdone=1) { doing=-1; wdone=0; wspd=3; img=1; blaze=0; }
}
if (fff!=0) fff+=1;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//BBall Twister
if (inair=1) { event_user(5); exit; }
if (exec!=-1) { global.descriptor="Ball Twister"; fff=0; exec=-1; stage=0; doing=2; exit; }
global.b_obj=global.b_middle;
if (stage=0) {
if (fff=0) { fff=1; img=8; }
if (fff=15) { 
arm=(instance_create(x+11,y,oBBallmonster1));
arm.depth=target.depth-1;
arm.xx=target.x;
arm.yy=target.y;
arm.master=id;
img=9;
}
} else if (stage=3) {
if (fff=10) { doing=-1; img=1; ended=0; finish=1; blaze=0; }
}
if (fff!=0) fff+=1;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//brace
if (inair=1) { event_user(5); exit; }
if (exec!=-1) { 
if (blaze=2) { event_user(floor(random(4))); exit; } //do other
global.descriptor="Brace Oneself"; fff=0; exec=-1; stage=0; doing=1; exit; 
}
if (stage=0) {
if (fff=0) { fff=1; img=7; blaze=1; }
if (fff=30) { 
sS(mBallmonster0);
blaze=2; 
sBCondition('power',floor(_rpower*.25),id);
img=1;
}
if (fff&gt;60) { doing=-1; img=1; ended=0; finish=1; } //prevents skip
}
if (fff!=0) fff+=1;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//punch
if (inair=1) { event_user(5); exit; }
if (exec!=-1) { global.descriptor="Ball Punch"; fff=0; exec=-1; walkdist=50; stage=0; wdoing=0; walk=target; exit; }
if (stage=0) {
if (fff=0) { fff=1; img=14; }
x=x-(4/2)+random(4);
y=y-(4/2)+random(4);
if (fff&gt;14) { stage=2; cou=0; fff=1; img=15; sDamage(doing); sS(mBPunch); }
} else if (stage=2) {
if (fff&gt;29) { doing=-1; img=1; blaze=0; }
}
if (fff!=0) fff+=1;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (view_current!=0 || stop=1) exit;
if (blaze=1) {
repeat (15) {
draw_set_color(make_color_rgb(128+random(120),32,32));
xer=random(180);
xe=fx+lengthdir_x(40,xer);
ye=fy+lengthdir_y(20,xer);
//draw_line(xe,ye,xe,ye-random(90));
draw_rectangle(xe,ye,xe+1,ye-random(90),0);
}
}
if (blaze=2) col=make_color_rgb(128+random(120),32,32);
if (inair=0) draw_sprite_ext(sprite_index,floor(img),x,y,image_xscale,image_yscale,image_angle,col,alp);
if (blaze=1) {
repeat (15) {
draw_set_color(make_color_rgb(128+random(120),32,32));
xer=180+random(180);
xe=fx+lengthdir_x(40,xer);
ye=fy+lengthdir_y(20,xer);
//draw_line(xe,ye,xe,ye-random(90));
draw_rectangle(xe,ye,xe+1,ye-random(90),0);
}
}
event_user(15);</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
