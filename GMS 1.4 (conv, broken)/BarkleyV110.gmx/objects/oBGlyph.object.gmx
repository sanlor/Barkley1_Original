<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sBGlyph</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale=0;
image_yscale=0;
target=oBCyberdwarf.target;
direction=point_direction(x,y,target.x,target.y);
spd=3;
cv=0;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (floor(random(2))=1) { global.b_shadow=id; instance_create(x,y,oBShadow); }
if (image_xscale&lt;1) {
image_xscale+=0.1;
image_yscale+=0.1;
speed=0;
} else {
image_xscale=1;
image_yscale=1;
speed=spd+image_single;
}
image_angle+=8+random(4);
cv+=1;
if (cv&gt;119) instance_destroy();
if (x&gt;target.x) {
instance_destroy();
if (image_single=0) { //touch
sBCondition('vp',floor(target._rvp/2),target); 
with (target) {
mw=floor(random(4));
if (mw=0) { sBCondition('guard',ceil(_rguard*.13),id); }
if (mw=1) { sBCondition('power',ceil(_rpower*.13),id); }
if (mw=2) { sBCondition('speed',ceil(_rspeed*.13),id); }
if (mw=3) { sBCondition('brain',ceil(_rbrain*.13),id); }
}
}
if (image_single=1) { 
sBCondition('vp',floor((target._rvp)),target); 
with (target) {
if (_xguard&lt;0) _xguard=0;
  if (_xpower&lt;0) _xpower=0;
  if (_xspeed&lt;0) _xspeed=0;
  if (_xbrain&lt;0) _xbrain=0;
}
} //knowledge
if (image_single=2) { sBCondition('vp',floor(target._rvp*.66),target); } //carress
sS(mHeal3);
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (view_current!=0) exit;
sD();</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
