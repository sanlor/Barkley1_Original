<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sBCyberStand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oBattler</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
facet=3;
option[2]='Combo';
option[1]='Dwarfrage';
option[0]='Cover';
optiond[0]="Protect allies with a %33 guard bonus.";
optiond[1]="Summon rage from within to cast magicks.";
optiond[2]="Pound enemies into oblivion with a combo.";
image_speed=0.2;
footy=18;
enemy=0;
name="Cyberdwarf";
hurts=sBCyberHurt;
deads=sBCyberDead;
defend=sBCyberDefend;
runs=sBCyberWalk;
item=sBCyberItem;
cele=sBCyberCelebrate;
_vp=600;
_bp=600;
_power=20;
_speed=30;
_guard=20;
_brain=40;
//////////
stage=0; //for meter object
wdone=0;
walk=-999;
wspd=6; //was 5 //3
doing=-1;
rou=0;
event_user(14);
prefin=-1;
onr=0;
instance_create(8,8,oBComboMeter);
//Info
infoh[0]="Quick Reference:";
info[0]="Action / Cancel / Start - Normal attacks.#Left / Down / Right + Any Key - Finisher.###Press left or right for attack information.";
info[1]="1";
infoh[1]="Regular Attacks";
info[2]="1";
infoh[2]="Finishers";
info[3]="1";
infoh[3]="Executing Finishers";
infoh[4]="Combo Bar";
info[4]="The bar fills over time and when you strike. There are two attacks, regular and finishers. Running out of time or using a finisher will end the combo.";
//infoh[2]="Regular Attacks";
//info[2]="Action - Jab, low damage.#Cancel - Kick, medium damage.#Start - Punch, high damage.";
//infoh[3]="Finishers";
//info[3]="Left + Action - Push, lower brain.#Down + Action - Toss, lower attack.#Right + Action - Suplex, lower defense.";
infoh[5]="Combo Tactics";
info[5]="To get maximum damage, do not perform a finisher and alternate attacks. Use jabs on low guard foes, and punches on high guard foes for best results.";
info[6]="";
infomax=4;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
attack=0;
finish=1;
prefin=-1;
image_speed=0.2;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (target) { walk=slav; walkdist=5; image_angle=0; image_xscale=1; }</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (exec!=-1) { doing=exec; stage=0; rou=0; exec=-1; attack=0; }
if (doing!=-1 &amp;&amp; doing&lt;6) event_user(doing);
else if (attack=1) {
//walk=target;
//if (sKey(vk_anykey) &amp;&amp; doing=-1) { 
if (onr=1) { stage=0; rou=0; doing=12; onr=0; }
if (doing!=-1) event_user(doing);
}
if (attack=0) onr=1;
wdone=0;
if (walk!=-999) {
if (walk=slav &amp;&amp; instance_exists(oDamage)=0) global.b_obj=global.b_middle;
x+=lengthdir_x(wspd,point_direction(fx,fy,walk.fx+walkdist,walk.fy));
y+=lengthdir_y(wspd*2,point_direction(fx,fy,walk.fx+walkdist,walk.fy));
dist=point_distance(fx,fy,walk.fx+walkdist,walk.fy);
if (dist&lt;=wspd) { wdone=1; walk=-999; sprite_index=sBCyberStand; }
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//General hits
//if (stage&gt;=2.1) { oBattleMenu.dene=1; oBattleMenu.ddesc=0; }
if (stage=0) {
flp=0;
target.editing=1; //zomball mainly
oy=target.fy;
walk=target;
walkdist=30;
sprite_index=sBCyberWalk;
image_speed=0.3;
stage=1;
} else if (stage=1) {
if (wdone=1) { stage=1.1; }
} else if (stage=1.1) {
if (sKey(global.key_action) || sKey(global.key_cancel) || sKey(global.key_start)) { 
stage=2.1; oBComboMeter.cur=0; oBComboMeter.fill=0; oBComboMeter.hit[0,0]=-1; oBComboMeter.visible=1; lax='null';
oBattleMenu.state='postshow'; global.descriptor="Combo";
}
} else if (stage=2.11) {
if (flp&lt;3) { flp+=1; stage=100+floor(random(3)); }
else { doing=floor(random(3)); stage=2; }
} else if (stage=3) {
rou+=1;
if (rou&gt;20) { image_index=4; rou=0; stage=4; target.shake=200; target.image_angle=90; target.direction=180; target.speed=4; target.friction=0.33; }
} else if (stage=4) {
rou+=1;
if (rou&gt;20) { image_index=5; target.direction=180; target.shake=15; target.speed=4; target.friction=0.33; stage=5; }
} else if (stage=5) {
if (target.speed=0) { alarm[0]=45; target.speed=0; target.friction=0; stage=200; }
} else if (stage=200) {
walk=slav;
walkdist=7;
sprite_index=sBCyberWalk;
image_speed=0.3;
stage=201;
} else if (stage=201 &amp;&amp; wdone=1) {
target.editing=0;
alarm[5]=5;
doing=-1;
} else if (stage=100) { ///////////////////////////////jab - 7 - make alternate give more dmg
 if (rou=0) { 
  if (lax!='jab') ert=1.25;
  else ert=1;
  lax='jab';
  sBarkDmg('jab');
  sound_play(mBJab);
 } 
 sprite_index=sBCyberPunch; image_index=0; image_speed=0;
 rou+=1;
 if (rou&gt;4) image_index=2;
 if (rou&gt;7) { rou=0; stage=2.1; }
} else if (stage=102) { ///////////////////////////////////////////////punch - 12
 if (rou=0) { 
  if (lax!='punch') ert=1.25;
  else ert=1;
  lax='punch';
  sBarkDmg('punch');
  sound_play(mBPunch);
 }
 sprite_index=sBCyberPunch; image_index=1; image_speed=0;
 rou+=1;
 if (rou&gt;8) image_index=2;
 if (rou&gt;13) { rou=0; stage=2.1; }
} else if (stage=101) { ////////////////////////////////////////////////kick - 9
 if (rou=0) { 
  if (lax!='kick') ert=1.25;
  else ert=1;
  lax='kick';
  sBarkDmg('kick');
  sound_play(mBKick);
 }
 sprite_index=sBCyberPunch; image_index=8; image_speed=0;
 rou+=1;
 if (rou&gt;6) image_index=2;
 if (rou&gt;9) { rou=0; stage=2.1; }
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Suplex - changed image index to inverse
if (stage=0) {
oy=target.fy;
walk=target;
walkdist=30;
sprite_index=sBCyberWalk;
image_speed=0.3;
stage=1;
} else if (stage=1) {
if (wdone=1) { stage=2; }
} else if (stage=2) {
sprite_index=sBCyberPunch;
image_index=2;
image_speed=0;
rou+=1;
if (rou&gt;20) { rou=0; stage=3; x-=5; target.shake=5; image_index=5; }
} else if (stage=3) {
rou+=1;
if (rou&gt;20) { image_index=4; rou=0; stage=3.1; target.shake=5; target.image_angle=90; target.x=x; target.y=y-abs(target.sprite_width/2)-5; target.sx=target.x; target.sy=target.y; }
} else if (stage=3.1) {
rou+=1;
if (rou&gt;20) { image_xscale=-1; rou=0; target.image_xscale=-1; stage=3.2; }
} else if (stage=3.2) {
rou+=1;
if (rou&gt;20) { image_xscale=-1; sprite_index=sBCyberSuplex; image_index=0; target.image_xscale=1; }
if (rou&gt;20) { rou=0; target.direction=180; target.speed=8; target.gravity=1; stage=5; }
} else if (stage=4) {

} else if (stage=5) {
rou+=1;
if (rou&gt;15) { rou=0; stage=5; }
if (target.y&gt;oy) { sBCondition('guard',-ceil(target._rguard*.13),target); global.b_obj=target; sound_play(mBFinal); alarm[0]=45; target.shake=15; target.y=oy; target.speed=0; target.gravity=0; stage=200; }
} else if (stage=200) {
walk=slav;
walkdist=7;
sprite_index=sBCyberWalk;
image_speed=0.3;
stage=201;
} else if (stage=201 &amp;&amp; wdone=1) {
alarm[5]=5;
target.editing=0;
doing=-1;
image_xscale=1;
} //target.x=x-(target.sprite_width/2)-5; target.y=y-(target.sprite_width/2)-5;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="19">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//toss
if (stage=0) {
oy=target.fy;
walk=target;
walkdist=30;
sprite_index=sBCyberWalk;
image_speed=0.3;
stage=1;
} else if (stage=1) {
if (wdone=1) { stage=2; }
} else if (stage=2) {
sprite_index=sBCyberPunch;
image_index=2;
image_speed=0;
rou+=1;
if (rou&gt;20) { rou=0; stage=3; x-=5; target.shake=5; image_index=5; }
} else if (stage=3) {
rou+=1;
if (rou&gt;20) { image_index=4; rou=0; stage=4; target.shake=5; target.image_angle=90; target.x=x; target.y=y-abs(target.sprite_width/2)-5; target.sx=target.x; target.sy=target.y; }
} else if (stage=4) {
rou+=1;
if (rou&gt;20) { image_index=5; target.direction=130; target.speed=8; target.gravity=1; stage=5; }
} else if (stage=5) {
if (target.y&gt;oy) { sBCondition('power',-ceil(target._rpower*.13),target); global.b_obj=target; sound_play(mBFinal); alarm[0]=45; target.shake=15; target.y=oy; target.speed=0; target.gravity=0; stage=200; }
} else if (stage=200) {
walk=slav;
walkdist=7;
sprite_index=sBCyberWalk;
image_speed=0.3;
stage=201;
} else if (stage=201 &amp;&amp; wdone=1) {
alarm[5]=5;
target.editing=0;
doing=-1;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="18">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//push
if (stage=0) {
oy=target.fy;
walk=target;
walkdist=30;
sprite_index=sBCyberWalk;
image_speed=0.3;
stage=1;
} else if (stage=1) {
if (wdone=1) { stage=2; }
} else if (stage=2) {
sprite_index=sBCyberPunch;
image_index=2;
image_speed=0;
rou+=1;
if (rou&gt;20) { sBCondition('brain',-ceil(target._rbrain*.13),target); rou=0; x-=10; image_index=5; sound_play(mBFinal); target.direction=180; target.shake=15; target.speed=4; target.friction=0.33; stage=5; }
} else if (stage=5) {
if (target.speed=0) { alarm[0]=45; target.speed=0; target.friction=0; stage=200; }
} else if (stage=200) {
walk=slav;
walkdist=7;
sprite_index=sBCyberWalk;
image_speed=0.3;
stage=201;
} else if (stage=201 &amp;&amp; wdone=1) {
alarm[5]=5;
target.editing=0;
doing=-1;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Dwarf Caress
global.b_obj=global.b_middle;
target=global.b_middle;
if (stage=0) {
walk=target;
walkdist=7;
sprite_index=sBCyberWalk;
image_speed=0.3;
stage=1;
} else if (stage=1) {
if (wdone=1) { stage=2; coi=0; coh=0; sprite_index=sBCyberSkill5; image_index=0; image_speed=0; image_xscale=-1; }
} else if (stage=2) {
coh+=1;
if (coh&gt;5) { stage=3; coh=0; image_index=1; sS(mHeal2);
with (oBattler) {
if (enemy=0 &amp;&amp; _vp&gt;0) {
global.trmp=id;
with (oBCyberdwarf) { target=global.trmp; fol=instance_create(x+10,y-20,oBGlyph); fol.image_single=2; }
}
}
}
} else if (stage=3) {
if (instance_exists(oBGlyph)=0) stage=200;
} else if (stage=200) {
image_xscale=-1;
walk=slav;
walkdist=7;
sprite_index=sBCyberWalk;
image_speed=0.3;
stage=201;
} else if (stage=201 &amp;&amp; wdone=1) {
alarm[5]=5;
doing=-1;
image_xscale=1;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Chaff grenade
global.b_obj=global.b_middle;
target=global.b_middle;
if (stage=0) {
walk=target;
walkdist=7;
sprite_index=sBCyberWalk;
image_speed=0.3;
stage=1;
} else if (stage=1) {
if (wdone=1) { target=sEnemyTarget('random',1); stage=2; coi=0; coh=0; sprite_index=sBCyberSkill4; image_index=0; image_speed=0;  }
} else if (stage=2) {
coh+=1;
if (coh&gt;15) { stage=2.1; coh=0; image_index=1; fol=instance_create(x-7,y-20,oBChaff); }
} else if (stage=2.1) {
coh+=1;
if (coh&gt;15) { image_index=2; with (fol) path_start(pChaff,5,0,0); stage=3; }
} else if (stage=3) {
if (instance_exists(oBChaff)=0) stage=200;
} else if (stage=200) {
walk=slav;
walkdist=7;
sprite_index=sBCyberWalk;
image_speed=0.3;
stage=201;
} else if (stage=201 &amp;&amp; wdone=1) {
alarm[5]=5;
doing=-1;
image_xscale=1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Insulin SHot
if (stage=0) {
if (target!=id) {
walk=target;
walkdist=-90;
} else {
walk=slav;
walkdist=-45;
}
sprite_index=sBCyberWalk;
image_speed=0.3;
stage=1;
} else if (stage=1) {
if (wdone=1) { stage=2; coi=0; coh=0; sprite_index=sBCyberSkill2; image_index=0; emg=0; if (target!=id) image_xscale=-1; }
} else if (stage=2) {
image_speed=0;
coi+=1;
if (coi&gt;3) {
coh+=1;
coi=0;
if (emg=3) emg=0;
else if (emg=0) emg=1;
else if (emg=1) emg=2;
else if (emg=2) emg=3;
image_index=emg;
}
if (coh&gt;4) { stage=3; coh=0; } //11
} else if (stage=3) {
img=4;
image_index=img;
if (coh=0) instance_create(x+10,y-5,oBNeedle);
coh=1;
if (instance_exists(oBNeedle)=0) stage=200;
} else if (stage=200) {
image_xscale=-1;
walk=slav;
walkdist=7;
sprite_index=sBCyberWalk;
image_speed=0.3;
stage=201;
} else if (stage=201 &amp;&amp; wdone=1) {
alarm[5]=5;
doing=-1;
image_xscale=1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Dwarf Knowledge - +3, +28
if (stage=0) {
if (target!=id) {
walk=target;
walkdist=-90;
} else {
walk=slav;
walkdist=-45;
}
sprite_index=sBCyberWalk;
image_speed=0.3;
stage=1;
} else if (stage=1) {
if (wdone=1) { stage=2; coi=0; coh=0; sprite_index=sBCyberSkill3; image_index=0; image_speed=0; if (target!=id) image_xscale=-1; }
} else if (stage=2) {
coh+=1;
if (coh&gt;5) { sS(mHeal1); stage=3; coh=0; image_index=1; fol=instance_create(x+10,y-20,oBGlyph); fol.image_single=1; }
} else if (stage=3) {
if (instance_exists(oBGlyph)=0) stage=200;
} else if (stage=200) {
image_xscale=-1;
walk=slav;
walkdist=7;
sprite_index=sBCyberWalk;
image_speed=0.3;
stage=201;
} else if (stage=201 &amp;&amp; wdone=1) {
alarm[5]=5;
doing=-1;
image_xscale=1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Glaucoma Prayer - +3, +28
if (stage=0) {
target=global.b_middle;
walk=target;
walkdist=9;
sprite_index=sBCyberWalk;
image_speed=0.3;
stage=1;
} else if (stage=1) {
if (wdone=1) { stage=2; coi=0; coh=0; sprite_index=sBCyberSkill0; image_index=0; image_speed=0; image_xscale=-1; }
} else if (stage=2) {
coh+=1;
if (coh&gt;5) { stage=3; coh=0; image_index=1; fll=instance_create(fx-3,fy+5,oBSpotlight); fll.dalp=175; fll.width=50; fll.height=300; }
} else if (stage=3) {
if (fll.alp=175) { stage=3.1; sS(mPrayer); }
} else if (stage=3.1) {
coh+=1;
if (coh&gt;15) { 
with (oBattler) if (enemy=0) sBCondition("cure","glaucoma",id);
stage=4.1; 
coh=0; 
}
} else if (stage=4) {
if (fll.alp=0) { stage=200; with (fll) instance_destroy(); }
} else if (stage=4.1) {
coh+=1;
if (coh&gt;15) { stage=4; fll.dalp=0; }
} else if (stage=200) {
image_xscale=-1;
walk=slav;
walkdist=7;
sprite_index=sBCyberWalk;
image_speed=0.3;
stage=201;
} else if (stage=201 &amp;&amp; wdone=1) {
alarm[5]=5;
doing=-1;
image_xscale=1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Dwarf Touch - +3, +28
if (stage=0) {
if (target!=id) {
walk=target;
walkdist=-90;
} else {
walk=slav;
walkdist=-45;
}
sprite_index=sBCyberWalk;
image_speed=0.3;
stage=1;
} else if (stage=1) {
if (wdone=1) { stage=2; coi=0; coh=0; sprite_index=sBCyberSkill1; image_index=0; image_speed=0; if (target!=id) image_xscale=-1; }
} else if (stage=2) {
coh+=1;
if (coh&gt;5) { stage=3; coh=0; image_index=1; fol=instance_create(x+15,y,oBGlyph); fol.image_single=0; sS(mHeal0); } //was 20 glyph
} else if (stage=3) {
if (instance_exists(oBGlyph)=0) stage=200;
} else if (stage=200) {
image_xscale=-1;
walk=slav;
walkdist=7;
sprite_index=sBCyberWalk;
image_speed=0.3;
stage=201;
} else if (stage=201 &amp;&amp; wdone=1) {
alarm[5]=5;
doing=-1;
image_xscale=1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (view_current=0) {
draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,col,alp);
img=image_index;
event_user(15);
}</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
