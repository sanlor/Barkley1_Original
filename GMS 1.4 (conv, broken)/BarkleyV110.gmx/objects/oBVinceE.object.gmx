<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sBVinceEnemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oBattler</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
orgname="Vinceborg 2050";
footy=25;
walk=-999;
wspd=7;
cantrun=1;
//
stage=0;
doing=-1;
oy=y;
bou=0;
air=0;
pass=0;
pause=5;
//
ended=0;
walk=-999;
wspd=7;
wdoing=-1;
walkdist=100; //how close to get to target
//
master=id;
event_user(14);
prefin=-1;
image_xscale=-1;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
finish=1;
prefin=-1;
attack=0;
image_speed=0.2;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (exec!=-1) { event_user(exec); exec=-1; }
if (doing!=-1) {
ended=1;
event_user(doing);
} else {
wdone=0;
if (ended=1) { ended=0; walk=slav; wdoing=-1; walkdist=0; }
if (walk!=-999) {
x+=lengthdir_x(wspd,point_direction(fx,fy,walk.fx-walkdist,walk.fy));
y+=lengthdir_y(wspd*2,point_direction(fx,fy,walk.fx-walkdist,walk.fy));
dist=point_distance(fx,fy,walk.fx-walkdist,walk.fy);
if (dist&lt;wspd) { if (walk=slav) { finish=1; wspd=7; } doing=wdoing; walk=-999; wdone=1; image_xscale=-1; }
cou+=.25; sprite_index=sBVinceRun;
if (cou&gt;1) {
if (img=0) img=1;
else if (img=1) img=2;
else if (img=2) img=3;
else img=0;
}
} else { sprite_index=sBVinceEnemy; img=1; }
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.descriptor="Binary Shower";
global.b_obj=global.b_middle;
if (exec!=-1) { lou=0; bou=0; stage=0; global.b_obj=global.b_middle; doing=5; fff=0; exit; }
if (stage=0) {
if (fff=0) { fff=1; sprite_index=sBVinceCelebrate; img=0; sS(mBBinary); }
if (fff&gt;2 &amp;&amp; lou&lt;15) {
las=instance_create(x-25+random(30),y-50,oBDummy);
las.master=id; las.focus=1; las.visible=1; las.image_single=floor(random(2));
las.sprite_index=sBBinary; las.vspeed=3+random(2); las.depth=depth-1;
lou+=1;
fff=1;
}

with (oBDummy) { if (focus=1) {
image_alpha-=random(.1);
if (image_alpha&lt;0) instance_destroy();
} }

if (lou&gt;14 &amp;&amp; fff&gt;20) { fff=1; stage=1; }
} else if (stage=1) {
if (fff=2) {
sBCondition('power',floor(_rpower*.15),id);
sBCondition('brain',floor(_rbrain*.15),id);
sBCondition('speed',floor(_rspeed*.15),id);
sBCondition('guard',floor(_rguard*.15),id);
}
sprite_index=sBVinceEnemy; img=1;
if (fff&gt;15) { doing=-1; stage=0; finish=1; ended=0; }
}
if (fff!=0) fff+=1;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.descriptor="Proximity Pass";
global.b_obj=global.b_middle;
if (exec!=-1) { lou=0; bou=0; stage=0; global.b_obj=global.b_middle; doing=4; fff=0; exit; }
if (stage=0) {
if (fff=0) { fff=1; img=1; }
if (fff=5) { 
sprite_index=sBVinceItem; target=sEnemyTarget('random',!enemy);
ggg=instance_create(x+20,y-30,oBProxy); ggg.target=target; ggg.master=id; ggg.depth=target.depth-1;
}
if (fff=10) sprite_index=sBVinceEnemy;
if (fff=20) { 
sprite_index=sBVinceItem; target=sEnemyTarget('random',!enemy);
ggg=instance_create(x+16,y-26,oBProxy); ggg.target=target; ggg.master=id; ggg.depth=target.depth-1;
}
if (fff=25) sprite_index=sBVinceEnemy;
if (fff&gt;40 &amp;&amp; instance_exists(oBProxy)=0) { doing=-1; stage=0; finish=1; ended=0; }
}
if (fff!=0) fff+=1;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.descriptor='Short Circuit';
if (exec!=-1) { fff=0; exec=-1; walkdist=35; stage=0; wdoing=3; walk=target; exit; }
if (stage=0) {
depth=target.depth-1;
if (fff=0) { fff=1; img=1; sprite_index=sBVinceEnemy; }
if (fff=5) { sS(mBShorted); img=2; las=instance_create(x+25,y-17,oBDummy); las.sprite_index=sBShorted; las.depth=target.depth-1; las.visible=1; las.image_speed=.5; }
if (fff&gt;5) target.shake=5;
if (fff=20) {
with (target) {
sBCondition('brain',-floor(_rbrain*.15),id);
sBCondition('guard',-floor(_rguard*.15),id);
}
}
if (fff&gt;30) { doing=-1; img=1; with (las) instance_destroy(); }
}
if (fff!=0) fff+=1;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.descriptor="Recharge";
global.b_obj=global.b_middle;
if (exec!=-1) { lou=0; bou=0; stage=0; global.b_obj=global.b_middle; doing=2; fff=0; exit; }
if (stage=0) {
if (fff=0) { fff=1; img=0; sS(mBRecharge); }
if (fff=5) { 
shake=10;
sBCondition('vp',round(global.turn._rvp/5),id); sBCondition('bp',round(global.turn._rbp/5),id);
}

if (fff&gt;29) { doing=-1; stage=0; finish=1; ended=0; }
}
if (fff!=0) fff+=1;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Refractor Beam
if (exec!=-1) { lou=0; bou=0; stage=0; global.b_obj=global.b_middle; doing=1; exit; }
if (stage=0) {
sprite_index=sBVinceRefract;
las=instance_create(x+12,y-26,oBTarget1);
las.master=id;
with (las) {
target=sEnemyTarget('random',0);
x3=target.x;
y3=target.y;
x4=x3;
y4=y3;
}
bou=0;
stage=1;
} else if (stage=1) {
bou+=1;
if (bou&gt;59) { bou=0; stage=2; with (oBTarget1) instance_destroy(); }
} else if (stage=2) {
sprite_index=sBVinceEnemy;
doing=-1; stage=0; finish=1; ended=0;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Laser
if (exec!=-1) { exec=-1; stage=0; doing=0; exit; }
global.b_obj=global.b_middle;
if (stage=0) {
las=instance_create(x-5,y-30,oBTarget);
las.x2=target.x;
las.y2=target.y;
las.master=id;
img=1; sprite_index=sBVinceLaser;
stage=1;
bou=45;
} else if (stage=1) {
bou-=1;
if (bou&lt;0) {
with (oBTarget) instance_destroy();
stage=0;
doing=-1;
ended=0;
finish=1;
sprite_index=sBVinceEnemy;
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (view_current!=0) exit;
draw_sprite_ext(sprite_index,img,x,y,image_xscale,image_yscale,image_angle,col,alp);
event_user(15);</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
