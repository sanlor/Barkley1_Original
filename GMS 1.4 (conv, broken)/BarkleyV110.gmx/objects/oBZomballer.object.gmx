<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sBZomballer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oBattler</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
orgname='Zomballer';
footx=20-32;
footy=80-46;
//My vars
state=0; //Dribbling
kick=0;
throw=0;
jump=0;
walk=-999;
wspd=3;
event_user(14);</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(1);</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(oProjectile)=1) { alarm[0]=2; exit; }
kick=0;
throw=0;
img=1;
x=xstart;
finish=1;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (exec!=-1) { doing=exec; event_user(exec); exec=-1; }
wdone=0;
if (walk!=-999) {
x+=lengthdir_x(wspd,point_direction(fx,fy,walk.fx-walkdist,walk.fy));
y+=lengthdir_y(wspd*2,point_direction(fx,fy,walk.fx-walkdist,walk.fy));
dist=point_distance(fx,fy,walk.fx-walkdist,walk.fy);
if (dist&lt;wspd) { wdone=1; walk=-999; }
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (exec!=-1) { 
if (_bp&gt;=10) {
sound_volume(mZomballer0,0);
_bp-=10; jump=1; cou=0; exit; 
} else {
doing=floor(random(2)); event_user(doing); exit;
}
}
alarm[0]=30;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (exec!=-1) { throw=1; global.descriptor="Zombie Pass"; exit; }
throw=1;
img=4;
sS(mBThrow);
ggg=sThrow(x,y-10,target.x,target.y,10+random(5),40);
global.b_obj=ggg;
ggg.image_single=1;
ggg.target=target;
ggg.depth=target.depth-1;
alarm[0]=30; //finish turn 60</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (exec!=-1) { kick=1; global.descriptor="Zomballistic"; exit; }
kick=0;
img=5;
sS(mZomballer1);
ggg=sThrow(x+15,y+10,target.x,target.y,5+random(2),30);
global.b_obj=ggg;
ggg.image_single=1;
ggg.target=target;
ggg.depth=target.depth-1;
alarm[0]=30; //finish turn</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (view_current!=0 || stop=1) exit;
if (doing=2) {
if (jump=1) { img=3; cou+=1; if (cou=15) { jump=1.1; cou=0; } }
if (jump=1.1) { img=7; cou+=1; if (cou=20) { 
img=3; cou=0; jump=1.5; state=0; span=0.2;
welk=target;
org=point_distance(fx,fy,welk.fx,welk.fy);
hei=90;
oy=y;
sound_loop(mZomballer0);
} }
if (jump=1.5) {
y=oy;
x+=lengthdir_x(3,point_direction(fx,fy,welk.fx,welk.fy));
y+=lengthdir_y(3,point_direction(fx,fy,welk.fx,welk.fy));
erg=point_distance(fx,fy,welk.fx,welk.fy);
oy=y;
lrg=hei/(org/2);
if (erg&gt;org/2) { erg=abs((org/2)-(erg-(org/2))); y-=lrg*erg; }
else { erg=abs(((org/2)-erg)-(org/2)); y-=lrg*erg; }
span+=0.01;
sound_volume(mZomballer0,span*2);
if (state=0) image_xscale-=span;
else image_xscale+=span;
if (image_xscale&gt;1) state=0;
if (image_xscale&lt;-1) state=1;
if (point_distance(fx,fy,welk.fx,welk.fy)&lt;=20) { sS(mBDunk); jump=2; sDamage(doing); welk=slav; }
}
if (jump=2) {
y=oy;
x+=lengthdir_x(3,point_direction(fx,fy,welk.fx,welk.fy));
y+=lengthdir_y(3,point_direction(fx,fy,welk.fx,welk.fy));
erg=point_distance(fx,fy,welk.fx,welk.fy);
oy=y;
lrg=hei/(org/2);
if (erg&gt;org/2) { erg=abs((org/2)-(erg-(org/2))); y-=lrg*erg; }
else { erg=abs(((org/2)-erg)-(org/2)); y-=lrg*erg; }
span-=0.01;
sound_volume(mZomballer0,span*2);
if (state=0) image_xscale-=span;
else image_xscale+=span;
if (image_xscale&gt;1) state=0;
if (image_xscale&lt;-1) state=1;
if (point_distance(fx,fy,welk.fx,welk.fy)&lt;=2) { alarm[0]=15; sound_stop(mZomballer0); img=1; jump=0; doing=-1; image_xscale=1; }
}
draw_sprite_ext(sprite_index,img,x,y,image_xscale,image_yscale,0,col,alp);
if (img=7) draw_sprite_ext(sprite_index,6,x,y,image_xscale,image_yscale,0,col,alp);
if (img=3) draw_sprite_ext(sprite_index,6,x,y-8,image_xscale,image_yscale,0,col,alp);
} else {
if (img=0 &amp;&amp; shake&lt;=0) { img=1; state=0; cou=0; }
if (alarm[1]&gt;0) { x+=2; }
if (img&lt;=2 &amp;&amp; img!=0) {
if (cou&gt;0 &amp;&amp; cou&lt;10 &amp;&amp; state=1) img=2;
else img=1;
if (kick=1 &amp;&amp; cou&gt;30 &amp;&amp; state=1) { event_user(0); }
if (throw=1 &amp;&amp; cou&lt;=5 &amp;&amp; state=1) { alarm[1]=10; throw=0; img=3; cou=-10; }
if (editing=0) { //dribble
if (cou&lt;=0) state=1;
else if (cou&gt;=42) state=0;
if (state=1) cou+=3;
else cou-=3;
} else { cou=0; state=1; }
} 
draw_sprite_ext(sprite_index,img,x,y,image_xscale,image_yscale,image_angle,col,alp);
if ((img&lt;=2 &amp;&amp; img!=0) || alarm[1]&gt;0) draw_sprite_ext(sprite_index,6,x,y+cou,image_xscale,image_yscale,image_angle,col,alp);
}
event_user(15);</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
