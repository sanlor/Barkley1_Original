<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sBBarkleyStand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oBattler</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
facet=0;
option[2]='Shots';
option[1]='Slam/Jam';
option[0]='Guard';
optiond[0]="Get a %66 guard bonus for your turn.";
optiond[1]="Use deadly verboten jams to inflict damage.";
optiond[2]="Assault a foe with a b-ball shot.";
footy=25;
enemy=0; 
name="Barkley";
hurts=sBBarkleyHurt;
deads=sBBarkleyDead;
defend=sBBarkleyDefend;
runs=sBBarkleyRun;
item=sBBarkleyItem;
cele=sBBarkleyCelebrate;

_vp=7321;
_bp=200;
_power=20;
_speed=20;
_guard=20;
_brain=40;
walk=-999;
wspd=3;
//
image_speed=0.2;
bal=0; //Ball sprite
ok=-9; //So bball syncs with sprite image speed
stage=0;
doing=-1;
oy=y;
bou=0;
air=0;
pass=0;
pause=5;
fsh=2;
tch=0; //target change
tpp='null';
//
ay=y; //air y
jstage=0;
fstage=0;
pstage=0;
dummy=0; //for double team
master=id;
event_user(14);
prefin=-1;
fadstat=-9; fadamt=0; //jumper deal
onrl=0;
instance_create(0,0,oBTimer);
//Infos
infoh[0]="Quick Reference:";
info[0]="Action Key - Free Throw#Cancel Key - Pass#Up Key (+ Left / Right) - Jumper#Press left or right for attack information.";
infoh[1]="Action Key - Free Throw";
info[1]="0-150% base accuracy, low damage.#Hold and release to line up with the indicator for maximum accuracy. Shoot two shots, target using left / right.";
infoh[2]="Cancel Key - Pass";
info[2]="50% base accuracy, very high damage.#Hold and release when the BBall lines up with the indicator for maximum damage.";
infoh[3]="Left + Up Key - Forward Jumper";
info[3]="100% base accuracy, high damage.#Hold and release at the height of the jump for maximum damage. Reduces guard 33% until the next turn.";
infoh[4]="Up Key - Jumper";
info[4]="150% base accuracy, medium damage.#Hold and release at the height of the jump for maximum damage.";
infoh[5]="Right + Up Key - Fadeaway Jumper";
info[5]="100% base accuracy, low damage.#Hold and release at the height of the jump for maximum damage. Gives a 33% guard bonus until the next turn.";
info[6]="";
infomax=5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
finish=1;
prefin=-1;
attack=0;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if (global.b_focus=0 || global.b_obj!=global.b_middle) { alarm[0]=1; exit; }
if (fadstat=-1) { sDamageC(id,"Guard Up",c_ltgray); fadamt=floor(_rguard/3); _rguard+=fadamt; }
if (fadstat=1) { sDamageC(id,"Guard Down",c_ltgray); fadamt=floor(_rguard/3); _rguard-=fadamt; }
sVerifyStats();</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//air depth
if (air=1) depth=-(ay+fy);
else ay=y;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (prefin=1) { if (instance_exists(oProjectile)=0 &amp;&amp; air=0 &amp;&amp; jstage=0) { prefin=-2; alarm[5]=10; } }
if (prefin=2) { if (instance_exists(oProjectile)=0 &amp;&amp; oBTimer.visible=0 &amp;&amp; fstage=0) { prefin=-2; alarm[5]=10; } }
if (prefin=3) { if (instance_exists(oProjectile)=0 &amp;&amp; oBTimer.visible=0 &amp;&amp; pstage=0) { prefin=-2; alarm[5]=10; } }
if (prefin=-2) exit;
//skill
if (dummy=1) {
visible=!visible;
master.visible=!visible;
exit;
}
//
if (global.turn=id) {
if (onrl=0) {
tpp='null';
if (prefin=-1 &amp;&amp; fadstat=-1) { sDamageC(id,"Guard Down",c_ltgray); fadstat=-9; _rguard-=fadamt; sVerifyStats(); }
if (prefin=-1 &amp;&amp; fadstat=1) { sDamageC(id,"Guard Up",c_ltgray); fadstat=-9; _rguard+=fadamt; sVerifyStats(); }
onrl=1;
}
} else onrl=0;
if (exec!=-1) { event_user(exec); doing=exec; exec=-1; }
if (doing&gt;=0 &amp;&amp; doing&lt;=9) {
event_user(doing);
} else if (attack=1) {
//if (prefin=-1 || prefin=1) 
event_user(10); //jump
//if (prefin=-1 || prefin=2) 
event_user(11); //pass
//if (prefin=-1 || prefin=3) 
event_user(12); //free
}
wdone=0;
if (walk!=-999) {
x+=lengthdir_x(wspd,point_direction(fx,fy,walk.fx+walkdist,walk.fy));
y+=lengthdir_y(wspd*2,point_direction(fx,fy,walk.fx+walkdist,walk.fy));
dist=point_distance(fx,fy,walk.fx+walkdist,walk.fy);
if (dist&lt;=wspd) { wdone=1; walk=-999; image_speed=0.2; sprite_index=sBBarkleyStand; }
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="23">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//base offsets from here not draw event
for (l=0; l&lt;20; l+=1) { bx[l]=-888; by[l]=-888; }
duala=0;
dualb=0;
if (sprite_index=sBBarkleyItem) {
after=0;
bx[0]=3; by[0]=36;
}
if (sprite_index=sBBarkleyCelebrate) {
after=1;
bx[0]=56; by[0]=20;
bx[1]=52; by[1]=16;
}
if (sprite_index=sBBarkleyMuscle0) {
after=1;
bx[0]=37; by[0]=66;
bx[1]=37; by[1]=66;
bx[2]=37; by[2]=66;
bx[3]=37; by[3]=66;
bx[4]=37; by[4]=66;
bx[5]=37; by[5]=66;
bx[6]=37; by[6]=66;
bx[7]=37; by[7]=66;
}
if (sprite_index=sBBarkleyDefend) {
if (bal=6) duala=1;
after=1;
bx[0]=38; by[0]=36;
bx[1]=39; by[1]=39;
bx[2]=39; by[2]=44;
bx[3]=38; by[3]=67;
bx[4]=37; by[4]=52;
bx[5]=37; by[5]=41;
}
if (sprite_index=sBBarkleyPass0) {
after=0;
bx[0]=20; by[0]=54;
bx[0]=18; by[0]=27;
bx[1]=28; by[1]=16;
bx[2]=42; by[2]=11;
bx[3]=51; by[3]=25;
bx[4]=47; by[4]=28; 
bx[5]=42; by[5]=12;
bx[6]=-999; by[6]=-999;
bx[7]=-999; by[7]=-999;
}
if (sprite_index=sBBarkleyStand) {
if (bal=6) dualb=1;
after=0;
bx[0]=9; by[0]=35;
bx[1]=9; by[1]=41;
bx[2]=10; by[2]=52;
bx[3]=10; by[3]=65;
bx[4]=9; by[4]=43;
}
if (sprite_index=sBBarkleyRun) {
after=1;
if (bal=6) duala=1;
bx[0]=23; by[0]=35;
bx[1]=19; by[1]=37;
bx[2]=6; by[2]=66;
bx[3]=17; by[3]=54;
bx[4]=21; by[4]=45;
bx[5]=25; by[5]=36;
bx[6]=26; by[6]=36;
}
if (sprite_index=sBBarkleyFree) {
after=0;
bx[0]=7; by[0]=39;
bx[1]=33; by[1]=8;
bx[2]=-999; by[2]=-999;
}
if (sprite_index=sBBarkleyJump) {
after=0;
bx[0]=7; by[0]=39;
bx[1]=30; by[1]=7;
bx[2]=-999; by[2]=-999;
}
if (sprite_index=sBBarkleyHoly) {
after=0;
bx[0]=13; by[0]=18;
bx[1]=45; by[1]=11;
bx[2]=7; by[2]=18;
}
if (sprite_index=sBBarkleyHurt) {
after=1;
bx[0]=0; by[0]=0;
}
if (sprite_index=sBBarkleyShow) {
after=0;
bx[0]=6; by[0]=40;
bx[1]=41; by[1]=16;
bx[2]=48; by[2]=17;
bx[3]=44; by[3]=13;
bx[4]=32; by[4]=9;
bx[5]=28; by[5]=4;
bx[6]=25; by[6]=4;
bx[7]=27; by[7]=6;
bx[8]=10; by[8]=26;
bx[9]=14; by[9]=48;
}
if (sprite_index=sBBarkleyVamp) {
after=0;
bx[0]=35; by[0]=39;
bx[1]=23; by[1]=27;
bx[2]=39; by[2]=8;
bx[3]=50; by[3]=9;
bx[4]=52; by[4]=8;
bx[5]=50; by[5]=11;
bx[6]=17; by[6]=33;
}
//Mass edit
if (image_xscale=-1) { //flipped
for (l=0; bx[l]!=-888; l+=1) { 
//inv=abs(bx[l]-abs(sprite_xoffset));
inv=abs(sprite_xoffset)-bx[l];
bx[l]=inv;
by[l]=by[l]-sprite_yoffset;
}
} else { //regular
for (l=0; bx[l]!=-888; l+=1) { bx[l]=bx[l]-sprite_xoffset; by[l]=by[l]-sprite_yoffset; }
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Pass
if (tpp!='pass' &amp;&amp; tpp!='null') exit;
if (fstage!=0 || jstage!=0) exit;
if (pass=3) { //ball not dead
 if (instance_exists(oProjectile)=0) {
 sprite_index=sBBarkleyStand;
 image_speed=0.25;
 image_index=0;
 pstage=0;
 pass=0;
 doing=-1;
 }
 exit; 
}
if (pstage=0.5 || pstage=1) {

if (sKey(global.key_cancel)) {
pause=5;
image_index=min(image_index+1,pause-1);
} else if (image_index&lt;pause-1) { pass=3; exit; }
if (image_index&gt;=pause-1) {
global.descriptor="Pass";
prefin=3;
if (image_index=pause-1 &amp;&amp; pass=0) { pstage=1;pass=1; oBTimer.visible=1; with (oBTimer) event_user(0); oBTimer.lr=1; }
}
}

if (sKey(global.key_cancel)=0) {
if (pass=0) { tpp='null'; pstage=0; }
}

if (sKey(global.key_cancel)) {
 if (pstage=0) {
  tpp='pass';
  bou=0;
  pass=0;
  pstage=0.5;
  sprite_index=sBBarkleyPass0;
  image_speed=0;
  image_index=0;
 }
}
if ((sKey(global.key_cancel)=0 &amp;&amp; pstage=1) || pass=2) { //Released
 image_index+=1;
 pass=2;
 if (pass=2 &amp;&amp; image_index=6) {
 pstage=3;
 pass=3;
 image_index=6;
 del=abs(oBTimer.zy-40);
 if (oBTimer.zy=4) { del=45; }
 else del=del/1.3;
 oBTimer.lr=0;
 oBTimer.visible=0;
 doing=12;
 sS(mBThrow);
 sBarkDmg('pass');
 gff=sThrow(x,y-44,target.x,target.y,8+(del/10),40);
 gff.target=target;
 gff.sprite_index=sBBall2;
 gff.image_index=bal;
 global.b_obj=gff;
 if (bal=6) { //Dual Shot
 gff=sThrow(x,y-44,target.x,target.y,8+(del/10)+1,40);
 gff.target=target;
 gff.sprite_index=sBBall2;
 gff.image_index=7;
 }
 //doing=-1;
 }
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Free throw
if (tpp!='free' &amp;&amp; tpp!='null') exit;
if (pstage!=0 || jstage!=0) exit;
if (tch=1) {
with (oBattleMenu) {
sIntTarget(1);
if (sKey(global.key_left,1)) { sP(); pos1=max(0,pos1-1); }
if (sKey(global.key_right,1)) { sP(); pos1=min(targetmax,pos1+1); }
with (oBattler) hilight=0; 
targetid[pos1].hilight=1;
}
target=oBattleMenu.targetid[oBattleMenu.pos1];
oBattleMenu.hilight=target;
}
global.b_obj=global.b_middle;
if (fstage=3) { //ball not dead
 if (instance_exists(oProjectile)=0) {
 if (fsh&lt;0) {
  sprite_index=sBBarkleyStand;
  image_speed=0.25;
  image_index=0;
  fstage=0;
  doing=-1;
  fsh=2;
  tch=0;
  with (oBattler) hilight=0;
  oBattleMenu.hilight=-1;
 } else { //this is vital
  if (fsh=2) { tpp='null'; fstage=0; exit; }
  if (fsh!=2) global.descriptor="One shot left. Left / Right to change targets.";
  bou=0;
  tch=1;
  fstage=0.5;
  sprite_index=sBBarkleyFree;
  image_speed=0;
  image_index=0;
 }
 }
 exit; 
}
if (fstage=0.5 || fstage=1) {
bou+=1;
if (sKey(global.key_action)) {
pause=5;
} else if (bou&lt;pause) { fstage=3; exit; }
if (bou&gt;=pause) {
prefin=2;
if (bou=pause) { 
if (fsh=2) { global.descriptor="Two shots left. Left / Right to change targets."; }
tch=1; image_index=1; oBTimer.visible=1; with (oBTimer) event_user(0); oBTimer.ud=1; 
}
fstage=1;
}
}

//if (sKey(global.key_action)=0) {
//if (image_index=0 &amp;&amp; fsh=2) { tpp='null'; fstage=0; }
//}

if (sKey(global.key_action)) {
 if (fstage=0 || (fstage=0.5 &amp;&amp; fsh=1)) {
  if (fstage=0) { fsh=2; }
  else { fsh=0.9; tch=1; }
  tpp='free';
  bou=0;
  fstage=0.5;
  sprite_index=sBBarkleyFree;
  image_speed=0;
  image_index=0;
 }
} else if (fstage=1) { //Released
 if (image_index=1) {
 tch=0;
 fstage=3;
 image_index=2;
 oBTimer.ud=0;
 oBTimer.visible=0;
 del=abs(oBTimer.yy-24);
 del=abs(del-24)/2.4;
 doing=11;
 fsh-=1;
 sS(mBThrow);
 sBarkDmg('freethrow');
 gff=sThrow(x+15,y-31,target.x,target.y,10+(del/3),40); //8
 gff.target=target;
 gff.sprite_index=sBBall2;
 gff.image_index=bal;
 //global.b_obj=gff;
 if (bal=6) { //Dual Shot
 gff=sThrow(x+15,y-31,target.x,target.y,10+(del/3)+1,40);
 gff.target=target;
 gff.sprite_index=sBBall2;
 gff.image_index=7;
 }
 //doing=-1;
 }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Jump shot
if (tpp!='jump' &amp;&amp; tpp!='null') exit;
if (pstage!=0 || fstage!=0) exit;
if (jstage=3) { //ball not dead
 if (instance_exists(oProjectile)=0) {
 sprite_index=sBBarkleyStand;
 image_speed=0.25;
 image_index=0;
 jstage=0;
 doing=-1;
 }
 exit; 
}
if (jstage=0.5 || jstage=1) {
bou+=1;
if (sKey(global.key_up)) {
height=10;
pause=15; //was 5
} else if (bou&lt;pause) { jstage=3; exit; }
if (bou&gt;=pause) {
global.descriptor=desc2+"Jumper";
prefin=1;
air=1;
if (bou=pause) { image_index=1; } //set when begin jump
if (bou&lt;pause+height &amp;&amp; image_index=1) { //up
x-=mom;
vel=abs((pause+height)-bou);
y-=vel;
} else { //down
x-=mom;
vel=abs(bou-(pause+height));
y+=vel;
}
jstage=1;
} else {
if (sKey(global.key_right)) { desc2="Fadeaway "; mom=-1; }
else if (sKey(global.key_left)) { desc2="Forward "; mom=1; }
else { desc2=""; mom=0; }
}
}

if (sKey(global.key_up)=0) {
global.b_obj=global.b_middle;
if (air=0) { tpp='null'; jstage=0; }
}

if (sKey(global.key_up)) {
 if (jstage=0) {
  global.b_obj=oBBarkley;
  tpp='jump';
  oy=y;
  bou=0;
  jstage=0.5;
  sprite_index=sBBarkleyJump;
  image_speed=0;
  image_index=0;
 }
} else if (jstage=1) { //Released
 if (image_index=1) {
 bou=pause+height;
 image_index=2;
 doing=10;
 sS(mBThrow);
 rvel=abs(vel-height); //0 to 10
 if (mom=1) { sBarkDmg('forward'); alarm[0]=1; fadstat=mom; }
 if (mom=0) sBarkDmg('jumper');
 if (mom=-1) { sBarkDmg('fadeaway'); alarm[0]=1; fadstat=mom; }
 gff=sThrow(x+8,y-28,target.x,target.y,11-(vel/2),40+abs(y-ystart));
 gff.target=target;
 gff.sprite_index=sBBall2;
 gff.image_index=bal;
 global.b_obj=gff;
 if (bal=6) { //Dual Shot
 gff=sThrow(x+8,y-28,target.x,target.y,11-(vel/2)+1,40+abs(y-ystart));
 gff.target=target;
 gff.sprite_index=sBBall2;
 gff.image_index=7;
 }
 //doing=-1;
 }
}
if (jstage!=0) {
if (y&gt;oy) { //When landing
 if (image_index=2) {
 y=oy; jstage=3;
 sprite_index=sBBarkleyEmpty;
 image_speed=0;
 image_index=0;
 air=0;
 } else { //fouled
 y=oy;
 keyboard_clear(global.key_up);
 jstage=0;
 sprite_index=sBBarkleyStand;
 image_speed=0.25;
 image_index=0;
 air=0;
 alarm[5]=1; prefin=-2;
 }
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Plus 1 to random stat
mw=floor(random(4));
if (mw=0) { sBCondition('guard',ceil(_rguard*.1),id); }
if (mw=1) { sBCondition('power',ceil(_rpower*.1),id); }
if (mw=2) { sBCondition('speed',ceil(_rspeed*.1),id); }
if (mw=3) { sBCondition('brain',ceil(_rbrain*.1),id); }</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Ghost Muscle
if (exec!=-1) { lou=0; bou=0; stage=0; }
if (stage=0) {
walk=slav;
walkdist=-40;
wspd=9;
sprite_index=sBBarkleyRun;
image_index=0;
image_speed=0.2;
stage=1;
} else if (stage=1) {
if (wdone=1) { 
stage=2; sprite_index=sBBarkleyMuscle0; image_index=0; image_speed=0.2; bou=0; fll=0;
}
} else if (stage=2) {
bou+=1;
if (bou&gt;4) {
fll+=1;
bou=0; instance_create(x,y,oBBarkleyGhost);
}
if (fll&gt;9) { stage=3; bou=0; }
} else if (stage=3) {
if (bou=0) {
sSkillDmg('ghostmuscle');
}
bou+=1;
if (bou&gt;19) { stage=100; }
} else if (stage=100) {
walk=slav;
walkdist=5;
wspd=9;
image_xscale=-1;
sprite_index=sBBarkleyRun;
image_speed=0.5;
stage=101;
} else if (stage=101) {
if (wdone=1) { doing=-1; stage=0; image_xscale=1; alarm[5]=1; }
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Vampslam
if (exec!=-1) { lou=0; bou=0; stage=0; }
if (stage=0) {
walk=target;
walkdist=180;
wspd=9;
sprite_index=sBBarkleyRun;
image_index=0;
image_speed=0.5;
stage=1;
} else if (stage=1) {
if (wdone=1) { 
stage=2.5; sprite_index=sBBarkleyVamp; image_index=0; image_speed=0;
}
} else if (stage=2.5) {
bou+=1;
if (bou&gt;6) { bou=0; image_index+=1; } //0-9
if (image_index=2) { air=1; if (bou=0) { path_start(pBarkley3,12,0,0); sS(mBVamploop); } }
if (image_index=7) { 
bou=0;
sprite_index=sBBarkleyEmpty; image_index=0; bou=0; stage=3; air=0;
sSkillDmg('vampslam');
if (string(oDamage.dmg)!="MISS") svr=oDamage.dmg;
else svr=0;
sS(mBBloodZ);
repeat (25) {
bld=instance_create(target.x,target.y,oBVampslam);
bld.target=id;
bld.mode=1;
}
}
} else if (stage=3) {
bou+=1;
if (bou=20) {
sS(mBVamp);
repeat (25) {
bld=instance_create(x-30+random(60),y-70-random(10),oBVampslam);
bld.target=id;
bld.mode=0;
}
}
if (bou=40) {
//if (svr!=0) sMoveSet(3,-svr,0,0,'self',999,1);
if (svr!=0) sBCondition('vp',svr,oBBarkley.id);
//i=3; movevar[i]=0; movebas[i]=-svr; movetar[i]='self'; sDamage(i);
}
if (bou&gt;49) { stage=100; }
} else if (stage=100) {
walk=slav;
walkdist=5;
wspd=9;
image_xscale=-1;
sprite_index=sBBarkleyRun;
image_speed=0.5;
stage=101;
} else if (stage=101) {
if (wdone=1) { doing=-1; stage=0; image_xscale=1; alarm[5]=1; }
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Holy Dunk
if (exec!=-1) { lou=0; bou=0; stage=0; }
if (stage=0) {
walk=target;
walkdist=130;
wspd=9;
sprite_index=sBBarkleyRun;
image_index=0;
image_speed=0.5;
stage=1;
} else if (stage=1) {
if (wdone=1) { 
stage=2; sprite_index=sBBarkleyStand; image_index=0; 
fll=instance_create(fx-3,fy+5,oBSpotlight); fll.dalp=175; fll.width=0; fll.height=300;
sS(mBHoly);
}
} else if (stage=2) {
bou+=1;
fll.width=bou*2;
if (bou&gt;29) { oy=y; stage=3; bou=0; sprite_index=sBBarkleyHoly; image_index=0; image_speed=0; }
} else if (stage=3) {
air=1;
bou+=1;
y-=2;
if (bou&gt;19) { stage=4; bou=0; image_index=1; }
} else if (stage=4) {
x-=4;
fll.x-=4;
if (abs(x-target.x)&lt;20) { stage=5; image_index=2; }
} else if (stage=5) {
y+=6;
if (y&gt;oy) { sS(mBDunk); y=oy; air=0; stage=6; fll.dalp=0; sSkillDmg('holydunk'); sprite_index=sBBarkleyStand; image_index=0; }
} else if (stage=6) {
bou+=1;
if (bou&gt;29) { stage=100; }
} else if (stage=100) {
walk=slav;
walkdist=5;
wspd=9;
image_xscale=-1;
sprite_index=sBBarkleyRun;
image_speed=0.5;
stage=101;
} else if (stage=101) {
if (wdone=1) { doing=-1; stage=0; image_xscale=1; alarm[5]=1; }
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Showboat Jam
if (exec!=-1) { lou=0; bou=0; stage=0; }
if (stage=0) {
walk=target;
walkdist=180;
wspd=9;
sprite_index=sBBarkleyRun;
image_index=0;
image_speed=0.5;
stage=1;
} else if (stage=1) {
if (wdone=1) { 
stage=2; sprite_index=sBBarkleyShow; image_index=0; image_speed=0;
}
} else if (stage=2) {
bou+=1;
if (bou&gt;7) { bou=0; image_index+=1; } //0-9
path_speed=5;
if (image_index=1) { air=1; if (bou=0) { path_start(pBarkley2,5,0,0); sS(mBCheer); } }
if (image_index=2) { if (bou=0) instance_create(0,0,oBFlash); if (bou&lt;6) path_speed=0; }
if (image_index=5) { if (bou=0) { instance_create(0,0,oBFlash); event_user(7); } if (bou&lt;6) path_speed=0; }
if (image_index=8) { if (bou=0) instance_create(0,0,oBFlash); if (bou&lt;6) path_speed=0; }
if (image_index=10) { 
sS(mBDunk);
sprite_index=sBBarkleyEmpty; image_index=0; bou=0; stage=3; air=0;
sSkillDmg('showboatjam');
}
} else if (stage=3) {
bou+=1;
if (bou&gt;14) { stage=100; }
} else if (stage=100) {
walk=slav;
walkdist=5;
wspd=9;
image_xscale=-1;
sprite_index=sBBarkleyRun;
image_speed=0.5;
stage=101;
} else if (stage=101) {
if (wdone=1) { doing=-1; stage=0; image_xscale=1; alarm[5]=1; }
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Doubleteam
if (exec!=-1) { lou=0; bou=0; stage=0; }
if (stage=0) {
walk=target;
walkdist=80;
wspd=9;
sprite_index=sBBarkleyRun;
image_index=0;
image_speed=0.5;
stage=1;
} else if (stage=1) {
if (wdone=1) { stage=2; }
} else if (stage=2) {
bou+=1; 
sprite_index=sBBarkleyJump;
image_index=0;
image_speed=0;
if (bou&gt;4) { bou=0; stage=3; }
} else if (stage=3) {
sprite_index=sBBarkleyStand;
image_index=0;
ddd=instance_create(x,y,object_index);
ddd.enemy=2;
ddd.dummy=1;
ddd.bal=bal;
ddd.master=id;
ddd.sprite_index=sBBarkleyJump;
with (ddd) { image_index=1; air=1; image_speed=0; path_start(pBarkley0,12,0,0); }
stage=3.001;
global.b_obj=target;
} else if (stage=4) {
ddd.image_xscale=-1;
ddd.image_index=0;
ddd.sprite_index=sBBarkleyStand;
bou+=1; 
if (bou&gt;4) { stage=5; bou=0; } //4
} else if (stage=5) {
ddd.sprite_index=sBBarkleyJump;
ddd.image_index=1;
ddd.air=1;
with (ddd) path_start(pBarkley1,12,0,0);
stage=3.002;
} else if (stage=6) { //throw master
sprite_index=sBBarkleyPass0;
bou+=1;
if (bou&gt;0) {
bou=0;
image_index+=1;
if (image_index=5) {
 sS(mBThrow);
 sSkillDmg('doubleteam');
 gff=sThrow(x,y-44,target.x,target.y,12+random(4),40);
 gff.target=target;
 gff.sprite_index=sBBall2;
 gff.image_index=bal;
 if (bal=6) { //Dual Shot
 gff=sThrow(x,y-44,target.x,target.y,12+random(4),40);
 gff.target=target;
 gff.sprite_index=sBBall2;
 gff.image_index=7;
 }
}
if (image_single&gt;=6) {
image_single=6;
if (instance_exists(oProjectile)=0) { sprite_index=sBBarkleyStand; image_index=0; stage=7; }
}
}
} else if (stage=6.1) { //throw slave
ddd.sprite_index=sBBarkleyPass0;
bou+=1;
if (bou&gt;0) {
bou=0;
ddd.image_index+=1;
if (ddd.image_index=5) {
 sS(mBThrow);
 sSkillDmg('doubleteam');
 gff=sThrow(ddd.x,ddd.y-44,target.x,target.y,12+random(4),40);
 gff.target=target;
 gff.sprite_index=sBBall2;
 gff.image_index=bal;
 if (bal=6) { //Dual Shot
 gff=sThrow(ddd.x,ddd.y-44,target.x,target.y,12+random(4),40);
 gff.target=target;
 gff.sprite_index=sBBall2;
 gff.image_index=7;
 }
}
if (ddd.image_single&gt;=6) {
ddd.image_single=6;
if (instance_exists(oProjectile)=0) { ddd.sprite_index=sBBarkleyStand; ddd.image_index=0; stage=7; }
}
}
} else if (stage=7) {
if (lou&gt;4) stage=4;
else {
lou+=1;
if (floor(random(2))=0) stage=6;
else stage=6.1;
}
} else if (stage=100) {
visible=1;
oy=target.fy;
walk=slav;
walkdist=5;
wspd=9;
image_xscale=-1;
sprite_index=sBBarkleyRun;
image_speed=0.5;
stage=101;
} else if (stage=101) {
if (wdone=1) { doing=-1; stage=0; image_xscale=1; alarm[5]=1; }
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (master) {
if (stage=2) path_end();
if (stage=3.001) {
with (ddd) { air=0; sprite_index=sBBarkleyStand; image_index=0; image_xscale=-1; }
stage=6;
}
if (stage=3.002) {
with (ddd) { air=0; instance_destroy(); }
stage=100;
}
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (view_current!=0) exit;
event_user(13);
if (air=1) draw_sprite(sBBarkleyShadow,0,x,ay);
kk=floor(image_index);
if (ok!=kk) { ane=random(360); ok=kk; }
dk=kk+1;
if (dk&gt;sprite_get_number(sprite_index)-1) dk=0;
if (sprite_index=sBBarkleyEmpty) noball=1; else noball=0;
if (noball=0) {
if (dualb=1) {
draw_sprite_ext(sBBall2,7,x+bx[dk],y+by[dk],1,1,ane,c_white,1);
draw_set_blend_mode(bm_add);draw_sprite(sBBallGlow,7,x+bx[dk],y+by[dk]);draw_set_blend_mode(bm_normal);
}
if (after=0) draw_sprite_ext(sBBall2,bal,x+bx[kk],y+by[kk],1,1,ane,c_white,1);
}
draw_sprite_ext(sprite_index,kk,x,y,image_xscale,image_yscale,image_angle,col,alp);
if (noball=0) {
if (after=1) draw_sprite_ext(sBBall2,bal,x+bx[kk],y+by[kk],1,1,ane,c_white,1);
if (duala=1) {
draw_sprite_ext(sBBall2,7,x+bx[dk],y+by[dk],1,1,ane,c_white,1);
draw_set_blend_mode(bm_add);draw_sprite(sBBallGlow,7,x+bx[dk],y+by[dk]);draw_set_blend_mode(bm_normal);
}
}
img=kk;
event_user(15);</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
